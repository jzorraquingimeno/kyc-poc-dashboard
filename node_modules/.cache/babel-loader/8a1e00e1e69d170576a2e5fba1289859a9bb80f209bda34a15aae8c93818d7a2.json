{"ast":null,"code":"var _jsxFileName = \"/home/jzorraquingimeno/dashboard-frontend/src/components/InvestigationReport.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport { apiService } from '../services/api';\nimport './InvestigationReport.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InvestigationReport = () => {\n  _s();\n  var _investigationData$ri;\n  const {\n    kvkNumber\n  } = useParams();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [apiStatus, setApiStatus] = useState('offline');\n  const [investigationData, setInvestigationData] = useState(null);\n  const [companyData, setCompanyData] = useState(null);\n\n  // Load investigation data from API\n  useEffect(() => {\n    const loadInvestigationData = async () => {\n      if (!kvkNumber) return;\n      try {\n        setLoading(true);\n\n        // First get company details to get the company name\n        const companyInfo = await apiService.getCompanyDetails(kvkNumber);\n        setCompanyData(companyInfo);\n\n        // Check API health\n        const health = await apiService.healthCheck();\n        setApiStatus(health.status === 'healthy' ? 'online' : 'offline');\n\n        // Get investigation results from processKYC\n        const investigationResult = await apiService.processKYC({\n          company_name: companyInfo.legalName,\n          home_url: `https://example.com/${companyInfo.legalName.toLowerCase().replace(/\\s+/g, '-')}`,\n          about_url: `https://example.com/${companyInfo.legalName.toLowerCase().replace(/\\s+/g, '-')}/about`\n        });\n        setInvestigationData(investigationResult);\n      } catch (error) {\n        console.error('Failed to load investigation data:', error);\n        setApiStatus('offline');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadInvestigationData();\n  }, [kvkNumber]);\n  const companyName = (companyData === null || companyData === void 0 ? void 0 : companyData.legalName) || 'Unknown Company';\n\n  // Generate structured risk findings for the 6 specific risk categories\n  const getFindings = () => {\n    console.log('Investigation data structure:', investigationData);\n\n    // Helper function to convert risk score to risk level\n    const getRiskLevel = score => {\n      if (score <= 3) return 'Low';\n      if (score <= 7) return 'Medium';\n      return 'High';\n    };\n\n    // Define the 6 risk categories with detailed information\n    const riskCategories = [{\n      key: 'geo_risk',\n      name: 'Geographical Risk',\n      description: 'Assessment of risks associated with the company\\'s geographical location and operational jurisdictions'\n    }, {\n      key: 'industry_risk',\n      name: 'Industry Risk',\n      description: 'Evaluation of sector-specific risks and regulatory requirements for the company\\'s business activities'\n    }, {\n      key: 'structure_risk',\n      name: 'Structure Risk',\n      description: 'Analysis of corporate structure, ownership transparency, and organizational complexity'\n    }, {\n      key: 'adverse_media_risk',\n      name: 'Adverse Media Risk',\n      description: 'Investigation of negative media coverage, public controversies, and reputational concerns'\n    }, {\n      key: 'sanctions_risk',\n      name: 'Sanctions Risk',\n      description: 'Screening against international sanctions lists and restricted party databases'\n    }, {\n      key: 'pep_risk',\n      name: 'Politically Exposed Person (PEP) Risk',\n      description: 'Assessment of connections to politically exposed persons and government officials'\n    }];\n    const findings = [];\n\n    // Try detailed risk assessment structure first\n    if (investigationData !== null && investigationData !== void 0 && investigationData.risk_assessment) {\n      const riskAssessment = investigationData.risk_assessment;\n      console.log('Using detailed risk assessment data:', riskAssessment);\n      riskCategories.forEach(category => {\n        const riskData = riskAssessment[category.key];\n        if (riskData) {\n          const score = riskData['Risk Score'] || 0;\n          findings.push({\n            category: riskData['Risk Category'] || category.name,\n            description: category.description,\n            score: score,\n            risk: getRiskLevel(score),\n            explanation: riskData.Summary || riskData['Risk Description'] || `${category.name} assessment completed with score ${score}/10.`\n          });\n        }\n      });\n    }\n\n    // Fallback: Generate structured findings from simple API response\n    else if (investigationData) {\n      console.log('Generating structured findings from simple API response');\n\n      // Use overall risk score and available findings to generate structured assessment\n      const baseScore = investigationData.risk_score ? Math.round(investigationData.risk_score / 10) : 5;\n      const apiFindings = investigationData.findings || [];\n      const recommendations = investigationData.recommendations || [];\n\n      // Generate intelligent risk assessments for each category\n      riskCategories.forEach((category, index) => {\n        let score = baseScore;\n        let explanation = '';\n\n        // Adjust scores and explanations based on category and available data\n        switch (category.key) {\n          case 'geo_risk':\n            score = Math.max(1, baseScore - 1); // Generally lower for established companies\n            explanation = `Geographical risk assessment based on company location and operational jurisdictions. `;\n            if (companyData !== null && companyData !== void 0 && companyData.address) {\n              explanation += `Company is registered in ${companyData.address}. `;\n            }\n            explanation += `Score reflects regional regulatory environment and political stability.`;\n            break;\n          case 'industry_risk':\n            score = baseScore;\n            explanation = `Industry-specific risk evaluation for the company's business sector. `;\n            if (companyData !== null && companyData !== void 0 && companyData.sbiDescription) {\n              explanation += `Operating in ${companyData.sbiDescription} sector. `;\n            }\n            explanation += `Assessment considers regulatory requirements and sector-specific compliance obligations.`;\n            break;\n          case 'structure_risk':\n            score = Math.max(2, baseScore - 1);\n            explanation = `Corporate structure analysis based on ownership transparency and organizational complexity. `;\n            if (companyData !== null && companyData !== void 0 && companyData.legalForm) {\n              explanation += `Legal form: ${companyData.legalForm}. `;\n            }\n            explanation += `Score reflects transparency of corporate structure and beneficial ownership.`;\n            break;\n          case 'adverse_media_risk':\n            // Check if findings mention media or reputation\n            const hasMediaFindings = apiFindings.some(f => f.toLowerCase().includes('media') || f.toLowerCase().includes('news') || f.toLowerCase().includes('negative'));\n            score = hasMediaFindings ? Math.min(8, baseScore + 2) : Math.max(1, baseScore - 2);\n            explanation = `Media screening and reputational risk assessment. `;\n            if (hasMediaFindings) {\n              explanation += `Investigation identified media coverage requiring attention. `;\n            } else {\n              explanation += `No significant adverse media coverage identified in current screening. `;\n            }\n            explanation += `Score based on public information and news analysis.`;\n            break;\n          case 'sanctions_risk':\n            score = Math.max(1, baseScore - 2); // Generally low for legitimate companies\n            explanation = `Sanctions screening against international restricted party lists. `;\n            explanation += `Company and associated parties checked against OFAC, EU, UN sanctions databases. `;\n            explanation += `Low score indicates no matches found in current screening.`;\n            break;\n          case 'pep_risk':\n            score = Math.max(1, baseScore - 1);\n            explanation = `Politically Exposed Person (PEP) risk assessment. `;\n            if (companyData !== null && companyData !== void 0 && companyData.directors && companyData.directors.length > 0) {\n              explanation += `Screening of ${companyData.directors.length} associated individual(s). `;\n            }\n            explanation += `Assessment covers direct and indirect connections to government officials and politically exposed persons.`;\n            break;\n        }\n        findings.push({\n          category: category.name,\n          description: category.description,\n          score: Math.min(10, Math.max(0, score)),\n          // Ensure 0-10 range\n          risk: getRiskLevel(score),\n          explanation: explanation\n        });\n      });\n    }\n\n    // Ensure we always have the 6 risk categories, even with minimal data\n    if (findings.length === 0) {\n      console.log('Creating default risk structure');\n      riskCategories.forEach(category => {\n        findings.push({\n          category: category.name,\n          description: category.description,\n          score: 3,\n          // Default medium-low score\n          risk: 'Low',\n          explanation: `${category.name} assessment pending. Preliminary evaluation suggests low risk profile based on available information.`\n        });\n      });\n    }\n    console.log('Generated structured findings:', findings);\n    return findings;\n  };\n  const findings = getFindings();\n\n  // Generate risk scores from API data with fallback\n  const getRiskScores = () => {\n    const scores = [];\n\n    // Try detailed risk assessment structure first\n    if (investigationData !== null && investigationData !== void 0 && investigationData.risk_assessment) {\n      const riskAssessment = investigationData.risk_assessment;\n      const riskCategories = [{\n        key: 'geo_risk',\n        name: 'Geographical Risk',\n        weight: 20\n      }, {\n        key: 'industry_risk',\n        name: 'Industry Risk',\n        weight: 15\n      }, {\n        key: 'structure_risk',\n        name: 'Structure Risk',\n        weight: 25\n      }, {\n        key: 'adverse_media_risk',\n        name: 'Adverse Media Risk',\n        weight: 15\n      }, {\n        key: 'sanctions_risk',\n        name: 'Sanctions Risk',\n        weight: 15\n      }, {\n        key: 'pep_risk',\n        name: 'PEP Risk',\n        weight: 10\n      }];\n      riskCategories.forEach(category => {\n        const riskData = riskAssessment[category.key];\n        if (riskData) {\n          scores.push({\n            category: riskData['Risk Category'] || category.name,\n            score: riskData['Risk Score'] || 0,\n            weight: category.weight\n          });\n        }\n      });\n    }\n\n    // Fallback: create a single overall risk score\n    else if ((investigationData === null || investigationData === void 0 ? void 0 : investigationData.risk_score) !== undefined) {\n      scores.push({\n        category: 'Overall Risk Assessment',\n        score: Math.round(investigationData.risk_score / 10),\n        // Convert from 0-100 to 0-10 scale\n        weight: 100\n      });\n    }\n    return scores;\n  };\n  const riskScores = getRiskScores();\n\n  // Use final_risk_score from API with fallback to risk_score (scale conversion)\n  const overallScore = (investigationData === null || investigationData === void 0 ? void 0 : (_investigationData$ri = investigationData.risk_assessment) === null || _investigationData$ri === void 0 ? void 0 : _investigationData$ri.final_risk_score) || (investigationData !== null && investigationData !== void 0 && investigationData.risk_score ? Math.round(investigationData.risk_score / 10) : 0);\n\n  // Generate conclusion based on overall score and available data\n  const getConclusion = () => {\n    var _investigationData$pu;\n    const riskLevel = overallScore <= 3 ? 'LOW RISK' : overallScore <= 7 ? 'MEDIUM RISK' : 'HIGH RISK';\n\n    // Use available description from API\n    const companyDescription = investigationData === null || investigationData === void 0 ? void 0 : (_investigationData$pu = investigationData.public_web_data) === null || _investigationData$pu === void 0 ? void 0 : _investigationData$pu.company_description;\n    const recommendations = investigationData === null || investigationData === void 0 ? void 0 : investigationData.recommendations;\n    let conclusion = `Based on comprehensive open-source investigation, ${companyName} presents a ${riskLevel} profile with a final risk score of ${overallScore}/10.`;\n    if (companyDescription) {\n      conclusion += ` ${companyDescription.substring(0, 300)}${companyDescription.length > 300 ? '...' : ''}`;\n    } else if (recommendations && Array.isArray(recommendations) && recommendations.length > 0) {\n      conclusion += ` Key recommendation: ${recommendations[0]}`;\n    } else {\n      conclusion += ` Investigation completed successfully with detailed findings available above.`;\n    }\n    return conclusion;\n  };\n  const conclusion = loading ? 'Loading investigation results...' : getConclusion();\n\n  // Extract Evidence Locker from API sources\n  const getEvidenceLocker = () => {\n    if (!(investigationData !== null && investigationData !== void 0 && investigationData.risk_assessment)) return [];\n    const evidence = [];\n    const riskAssessment = investigationData.risk_assessment;\n    const riskCategories = [{\n      key: 'geo_risk',\n      name: 'Geographical Risk'\n    }, {\n      key: 'industry_risk',\n      name: 'Industry Risk'\n    }, {\n      key: 'structure_risk',\n      name: 'Structure Risk'\n    }, {\n      key: 'adverse_media_risk',\n      name: 'Adverse Media Risk'\n    }, {\n      key: 'sanctions_risk',\n      name: 'Sanctions Risk'\n    }, {\n      key: 'pep_risk',\n      name: 'PEP Risk'\n    }];\n    riskCategories.forEach(category => {\n      const riskData = riskAssessment[category.key];\n      if (riskData !== null && riskData !== void 0 && riskData.Source) {\n        const categoryEvidence = {\n          category: riskData['Risk Category'] || category.name,\n          sources: []\n        };\n\n        // Handle different source structures\n        if (typeof riskData.Source === 'object') {\n          Object.keys(riskData.Source).forEach(sourceType => {\n            const sourceList = riskData.Source[sourceType];\n            if (Array.isArray(sourceList)) {\n              sourceList.forEach(source => {\n                if (source.title && source.link) {\n                  categoryEvidence.sources.push({\n                    title: source.title,\n                    link: source.link,\n                    snippet: source.snippet || 'No snippet available'\n                  });\n                }\n              });\n            }\n          });\n        }\n        if (categoryEvidence.sources.length > 0) {\n          evidence.push(categoryEvidence);\n        }\n      }\n    });\n    return evidence;\n  };\n  const evidenceLocker = getEvidenceLocker();\n\n  // Generate search keywords from company data\n  const getSearchKeywords = () => {\n    var _investigationData$pu2;\n    if (!companyData && !investigationData) return [];\n    const keywords = [];\n    if (companyData !== null && companyData !== void 0 && companyData.legalName) {\n      keywords.push(companyData.legalName);\n      // Add variations of company name\n      const nameParts = companyData.legalName.split(' ');\n      if (nameParts.length > 1) {\n        keywords.push(nameParts.slice(0, -1).join(' ')); // Without legal form\n      }\n    }\n    if (companyData !== null && companyData !== void 0 && companyData.sbiDescription) {\n      keywords.push(companyData.sbiDescription);\n    }\n    if (investigationData !== null && investigationData !== void 0 && (_investigationData$pu2 = investigationData.public_web_data) !== null && _investigationData$pu2 !== void 0 && _investigationData$pu2.key_activities) {\n      keywords.push(investigationData.public_web_data.key_activities);\n    }\n    return keywords.slice(0, 5); // Limit to 5 keywords\n  };\n  const searchKeywords = getSearchKeywords();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"report-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => navigate('/dashboard'),\n            className: \"breadcrumb-link\",\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"breadcrumb-separator\",\n            children: \"\\u203A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => navigate('/dashboard'),\n            className: \"breadcrumb-link\",\n            children: \"Recent Tickets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"breadcrumb-separator\",\n            children: \"\\u203A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => navigate(`/ticket/${kvkNumber}`),\n            className: \"breadcrumb-link\",\n            children: companyName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"breadcrumb-separator\",\n            children: \"\\u203A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"breadcrumb-current\",\n            children: \"Investigation Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"report-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"report-title-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"OPEN-SOURCE INVESTIGATION REPORT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this), !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `api-status-indicator ${apiStatus}`,\n              children: apiStatus === 'online' ? 'LIVE DATA' : 'Offline Mode'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: loading ? 'Loading Company...' : companyName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"report-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"KVK: \", kvkNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Generated: \", new Date().toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Processing investigation data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"report-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Search Keywords Used\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"keywords-container\",\n              children: searchKeywords.map((keyword, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"keyword-tag\",\n                children: keyword\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"report-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"FINDINGS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"findings-grid\",\n              children: findings.length > 0 ? findings.map((finding, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"finding-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"finding-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: finding.category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `risk-badge ${finding.risk.toLowerCase()}`,\n                    children: finding.risk\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: finding.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 19\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-findings\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"No findings available. Check browser console for API response details.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 19\n                }, this), investigationData && /*#__PURE__*/_jsxDEV(\"details\", {\n                  style: {\n                    marginTop: '1rem',\n                    padding: '1rem',\n                    background: '#f5f5f5',\n                    borderRadius: '8px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n                    children: \"Debug: Raw API Response\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 474,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                    style: {\n                      fontSize: '12px',\n                      overflow: 'auto',\n                      maxHeight: '300px'\n                    },\n                    children: JSON.stringify(investigationData, null, 2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"report-section conclusion-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"CONCLUSION\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conclusion-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"score-display\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-circle\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"score-number\",\n                    children: overallScore\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"score-max\",\n                    children: \"/10\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-label\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `risk-level ${overallScore <= 3 ? 'low' : overallScore <= 7 ? 'medium' : 'high'}`,\n                    children: overallScore <= 3 ? 'LOW RISK' : overallScore <= 7 ? 'MEDIUM RISK' : 'HIGH RISK'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conclusion-text\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: conclusion\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"report-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Risk Score Breakdown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score-breakdown\",\n              children: riskScores.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"score-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"score-category\",\n                    children: item.category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"score-weight\",\n                    children: [\"Weight: \", item.weight, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 514,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-bar\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"score-fill\",\n                    style: {\n                      width: `${item.score / 10 * 100}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 517,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"score-value\",\n                  children: [item.score, \"/10\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 19\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 11\n          }, this), evidenceLocker.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"report-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Evidence Locker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"evidence-categories\",\n              children: evidenceLocker.map((category, categoryIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"evidence-category\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: category.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"evidence-sources\",\n                  children: category.sources.map((source, sourceIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"evidence-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"evidence-header\",\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        href: source.link,\n                        target: \"_blank\",\n                        rel: \"noopener noreferrer\",\n                        className: \"evidence-link\",\n                        children: source.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 540,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 539,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"evidence-snippet\",\n                      children: source.snippet\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 549,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"evidence-url\",\n                      children: /*#__PURE__*/_jsxDEV(\"small\", {\n                        children: source.link\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 553,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 552,\n                      columnNumber: 27\n                    }, this)]\n                  }, sourceIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 538,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 21\n                }, this)]\n              }, categoryIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"report-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-btn primary\",\n              onClick: () => window.print(),\n              children: \"Download Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-btn secondary\",\n              onClick: () => navigate(`/ticket/${kvkNumber}`),\n              children: \"Back to Ticket\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-btn secondary\",\n              onClick: () => navigate('/dashboard'),\n              children: \"Back to Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 393,\n    columnNumber: 5\n  }, this);\n};\n_s(InvestigationReport, \"/PUAbv+niETFFwVwLFZKBI3YnVc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = InvestigationReport;\nexport default InvestigationReport;\nvar _c;\n$RefreshReg$(_c, \"InvestigationReport\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Header","Sidebar","apiService","jsxDEV","_jsxDEV","Fragment","_Fragment","InvestigationReport","_s","_investigationData$ri","kvkNumber","navigate","loading","setLoading","apiStatus","setApiStatus","investigationData","setInvestigationData","companyData","setCompanyData","loadInvestigationData","companyInfo","getCompanyDetails","health","healthCheck","status","investigationResult","processKYC","company_name","legalName","home_url","toLowerCase","replace","about_url","error","console","companyName","getFindings","log","getRiskLevel","score","riskCategories","key","name","description","findings","risk_assessment","riskAssessment","forEach","category","riskData","push","risk","explanation","Summary","baseScore","risk_score","Math","round","apiFindings","recommendations","index","max","address","sbiDescription","legalForm","hasMediaFindings","some","f","includes","min","directors","length","getRiskScores","scores","weight","undefined","riskScores","overallScore","final_risk_score","getConclusion","_investigationData$pu","riskLevel","companyDescription","public_web_data","company_description","conclusion","substring","Array","isArray","getEvidenceLocker","evidence","Source","categoryEvidence","sources","Object","keys","sourceType","sourceList","source","title","link","snippet","evidenceLocker","getSearchKeywords","_investigationData$pu2","keywords","nameParts","split","slice","join","key_activities","searchKeywords","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Date","toLocaleDateString","map","keyword","finding","style","marginTop","padding","background","borderRadius","fontSize","overflow","maxHeight","JSON","stringify","item","width","categoryIndex","sourceIndex","href","target","rel","window","print","_c","$RefreshReg$"],"sources":["/home/jzorraquingimeno/dashboard-frontend/src/components/InvestigationReport.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport { apiService } from '../services/api';\nimport './InvestigationReport.css';\n\ninterface Finding {\n  category: string;\n  description: string;\n  risk: 'Low' | 'Medium' | 'High';\n  score: number; // 0-10 scale\n  explanation: string;\n}\n\ninterface RiskScore {\n  category: string;\n  score: number;\n  weight: number;\n}\n\nconst InvestigationReport: React.FC = () => {\n  const { kvkNumber } = useParams<{ kvkNumber: string }>();\n  const navigate = useNavigate();\n  \n  const [loading, setLoading] = useState(true);\n  const [apiStatus, setApiStatus] = useState<'online' | 'offline'>('offline');\n  const [investigationData, setInvestigationData] = useState<any>(null);\n  const [companyData, setCompanyData] = useState<any>(null);\n\n  // Load investigation data from API\n  useEffect(() => {\n    const loadInvestigationData = async () => {\n      if (!kvkNumber) return;\n\n      try {\n        setLoading(true);\n        \n        // First get company details to get the company name\n        const companyInfo = await apiService.getCompanyDetails(kvkNumber);\n        setCompanyData(companyInfo);\n        \n        // Check API health\n        const health = await apiService.healthCheck();\n        setApiStatus(health.status === 'healthy' ? 'online' : 'offline');\n\n        // Get investigation results from processKYC\n        const investigationResult = await apiService.processKYC({\n          company_name: companyInfo.legalName,\n          home_url: `https://example.com/${companyInfo.legalName.toLowerCase().replace(/\\s+/g, '-')}`,\n          about_url: `https://example.com/${companyInfo.legalName.toLowerCase().replace(/\\s+/g, '-')}/about`\n        });\n\n        setInvestigationData(investigationResult);\n      } catch (error) {\n        console.error('Failed to load investigation data:', error);\n        setApiStatus('offline');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadInvestigationData();\n  }, [kvkNumber]);\n\n  const companyName = companyData?.legalName || 'Unknown Company';\n\n  // Generate structured risk findings for the 6 specific risk categories\n  const getFindings = (): Finding[] => {\n    console.log('Investigation data structure:', investigationData);\n\n    // Helper function to convert risk score to risk level\n    const getRiskLevel = (score: number): 'Low' | 'Medium' | 'High' => {\n      if (score <= 3) return 'Low';\n      if (score <= 7) return 'Medium';\n      return 'High';\n    };\n\n    // Define the 6 risk categories with detailed information\n    const riskCategories = [\n      {\n        key: 'geo_risk',\n        name: 'Geographical Risk',\n        description: 'Assessment of risks associated with the company\\'s geographical location and operational jurisdictions'\n      },\n      {\n        key: 'industry_risk', \n        name: 'Industry Risk',\n        description: 'Evaluation of sector-specific risks and regulatory requirements for the company\\'s business activities'\n      },\n      {\n        key: 'structure_risk',\n        name: 'Structure Risk', \n        description: 'Analysis of corporate structure, ownership transparency, and organizational complexity'\n      },\n      {\n        key: 'adverse_media_risk',\n        name: 'Adverse Media Risk',\n        description: 'Investigation of negative media coverage, public controversies, and reputational concerns'\n      },\n      {\n        key: 'sanctions_risk',\n        name: 'Sanctions Risk',\n        description: 'Screening against international sanctions lists and restricted party databases'\n      },\n      {\n        key: 'pep_risk', \n        name: 'Politically Exposed Person (PEP) Risk',\n        description: 'Assessment of connections to politically exposed persons and government officials'\n      }\n    ];\n\n    const findings: Finding[] = [];\n\n    // Try detailed risk assessment structure first\n    if (investigationData?.risk_assessment) {\n      const riskAssessment = investigationData.risk_assessment;\n      console.log('Using detailed risk assessment data:', riskAssessment);\n\n      riskCategories.forEach(category => {\n        const riskData = riskAssessment[category.key];\n        if (riskData) {\n          const score = riskData['Risk Score'] || 0;\n          findings.push({\n            category: riskData['Risk Category'] || category.name,\n            description: category.description,\n            score: score,\n            risk: getRiskLevel(score),\n            explanation: riskData.Summary || riskData['Risk Description'] || `${category.name} assessment completed with score ${score}/10.`\n          });\n        }\n      });\n    }\n    \n    // Fallback: Generate structured findings from simple API response\n    else if (investigationData) {\n      console.log('Generating structured findings from simple API response');\n      \n      // Use overall risk score and available findings to generate structured assessment\n      const baseScore = investigationData.risk_score ? Math.round(investigationData.risk_score / 10) : 5;\n      const apiFindings = investigationData.findings || [];\n      const recommendations = investigationData.recommendations || [];\n      \n      // Generate intelligent risk assessments for each category\n      riskCategories.forEach((category, index) => {\n        let score = baseScore;\n        let explanation = '';\n        \n        // Adjust scores and explanations based on category and available data\n        switch (category.key) {\n          case 'geo_risk':\n            score = Math.max(1, baseScore - 1); // Generally lower for established companies\n            explanation = `Geographical risk assessment based on company location and operational jurisdictions. `;\n            if (companyData?.address) {\n              explanation += `Company is registered in ${companyData.address}. `;\n            }\n            explanation += `Score reflects regional regulatory environment and political stability.`;\n            break;\n            \n          case 'industry_risk':\n            score = baseScore;\n            explanation = `Industry-specific risk evaluation for the company's business sector. `;\n            if (companyData?.sbiDescription) {\n              explanation += `Operating in ${companyData.sbiDescription} sector. `;\n            }\n            explanation += `Assessment considers regulatory requirements and sector-specific compliance obligations.`;\n            break;\n            \n          case 'structure_risk':\n            score = Math.max(2, baseScore - 1);\n            explanation = `Corporate structure analysis based on ownership transparency and organizational complexity. `;\n            if (companyData?.legalForm) {\n              explanation += `Legal form: ${companyData.legalForm}. `;\n            }\n            explanation += `Score reflects transparency of corporate structure and beneficial ownership.`;\n            break;\n            \n          case 'adverse_media_risk':\n            // Check if findings mention media or reputation\n            const hasMediaFindings = apiFindings.some((f: string) => \n              f.toLowerCase().includes('media') || f.toLowerCase().includes('news') || f.toLowerCase().includes('negative')\n            );\n            score = hasMediaFindings ? Math.min(8, baseScore + 2) : Math.max(1, baseScore - 2);\n            explanation = `Media screening and reputational risk assessment. `;\n            if (hasMediaFindings) {\n              explanation += `Investigation identified media coverage requiring attention. `;\n            } else {\n              explanation += `No significant adverse media coverage identified in current screening. `;\n            }\n            explanation += `Score based on public information and news analysis.`;\n            break;\n            \n          case 'sanctions_risk':\n            score = Math.max(1, baseScore - 2); // Generally low for legitimate companies\n            explanation = `Sanctions screening against international restricted party lists. `;\n            explanation += `Company and associated parties checked against OFAC, EU, UN sanctions databases. `;\n            explanation += `Low score indicates no matches found in current screening.`;\n            break;\n            \n          case 'pep_risk':\n            score = Math.max(1, baseScore - 1);\n            explanation = `Politically Exposed Person (PEP) risk assessment. `;\n            if (companyData?.directors && companyData.directors.length > 0) {\n              explanation += `Screening of ${companyData.directors.length} associated individual(s). `;\n            }\n            explanation += `Assessment covers direct and indirect connections to government officials and politically exposed persons.`;\n            break;\n        }\n        \n        findings.push({\n          category: category.name,\n          description: category.description,\n          score: Math.min(10, Math.max(0, score)), // Ensure 0-10 range\n          risk: getRiskLevel(score),\n          explanation: explanation\n        });\n      });\n    }\n\n    // Ensure we always have the 6 risk categories, even with minimal data\n    if (findings.length === 0) {\n      console.log('Creating default risk structure');\n      riskCategories.forEach(category => {\n        findings.push({\n          category: category.name,\n          description: category.description,\n          score: 3, // Default medium-low score\n          risk: 'Low',\n          explanation: `${category.name} assessment pending. Preliminary evaluation suggests low risk profile based on available information.`\n        });\n      });\n    }\n\n    console.log('Generated structured findings:', findings);\n    return findings;\n  };\n\n  const findings = getFindings();\n\n  // Generate risk scores from API data with fallback\n  const getRiskScores = (): RiskScore[] => {\n    const scores: RiskScore[] = [];\n\n    // Try detailed risk assessment structure first\n    if (investigationData?.risk_assessment) {\n      const riskAssessment = investigationData.risk_assessment;\n\n      const riskCategories = [\n        { key: 'geo_risk', name: 'Geographical Risk', weight: 20 },\n        { key: 'industry_risk', name: 'Industry Risk', weight: 15 },\n        { key: 'structure_risk', name: 'Structure Risk', weight: 25 },\n        { key: 'adverse_media_risk', name: 'Adverse Media Risk', weight: 15 },\n        { key: 'sanctions_risk', name: 'Sanctions Risk', weight: 15 },\n        { key: 'pep_risk', name: 'PEP Risk', weight: 10 }\n      ];\n\n      riskCategories.forEach(category => {\n        const riskData = riskAssessment[category.key];\n        if (riskData) {\n          scores.push({ \n            category: riskData['Risk Category'] || category.name, \n            score: riskData['Risk Score'] || 0, \n            weight: category.weight \n          });\n        }\n      });\n    }\n    \n    // Fallback: create a single overall risk score\n    else if (investigationData?.risk_score !== undefined) {\n      scores.push({\n        category: 'Overall Risk Assessment',\n        score: Math.round(investigationData.risk_score / 10), // Convert from 0-100 to 0-10 scale\n        weight: 100\n      });\n    }\n\n    return scores;\n  };\n\n  const riskScores = getRiskScores();\n\n  // Use final_risk_score from API with fallback to risk_score (scale conversion)\n  const overallScore = investigationData?.risk_assessment?.final_risk_score || \n                      (investigationData?.risk_score ? Math.round(investigationData.risk_score / 10) : 0);\n\n  // Generate conclusion based on overall score and available data\n  const getConclusion = (): string => {\n    const riskLevel = overallScore <= 3 ? 'LOW RISK' : overallScore <= 7 ? 'MEDIUM RISK' : 'HIGH RISK';\n    \n    // Use available description from API\n    const companyDescription = investigationData?.public_web_data?.company_description;\n    const recommendations = investigationData?.recommendations;\n    \n    let conclusion = `Based on comprehensive open-source investigation, ${companyName} presents a ${riskLevel} profile with a final risk score of ${overallScore}/10.`;\n    \n    if (companyDescription) {\n      conclusion += ` ${companyDescription.substring(0, 300)}${companyDescription.length > 300 ? '...' : ''}`;\n    } else if (recommendations && Array.isArray(recommendations) && recommendations.length > 0) {\n      conclusion += ` Key recommendation: ${recommendations[0]}`;\n    } else {\n      conclusion += ` Investigation completed successfully with detailed findings available above.`;\n    }\n    \n    return conclusion;\n  };\n\n  const conclusion = loading ? 'Loading investigation results...' : getConclusion();\n\n  // Extract Evidence Locker from API sources\n  const getEvidenceLocker = () => {\n    if (!investigationData?.risk_assessment) return [];\n    \n    const evidence: Array<{category: string, sources: Array<{title: string, link: string, snippet: string}>}> = [];\n    const riskAssessment = investigationData.risk_assessment;\n\n    const riskCategories = [\n      { key: 'geo_risk', name: 'Geographical Risk' },\n      { key: 'industry_risk', name: 'Industry Risk' },\n      { key: 'structure_risk', name: 'Structure Risk' },\n      { key: 'adverse_media_risk', name: 'Adverse Media Risk' },\n      { key: 'sanctions_risk', name: 'Sanctions Risk' },\n      { key: 'pep_risk', name: 'PEP Risk' }\n    ];\n\n    riskCategories.forEach(category => {\n      const riskData = riskAssessment[category.key];\n      if (riskData?.Source) {\n        const categoryEvidence = {\n          category: riskData['Risk Category'] || category.name,\n          sources: [] as Array<{title: string, link: string, snippet: string}>\n        };\n\n        // Handle different source structures\n        if (typeof riskData.Source === 'object') {\n          Object.keys(riskData.Source).forEach(sourceType => {\n            const sourceList = riskData.Source[sourceType];\n            if (Array.isArray(sourceList)) {\n              sourceList.forEach((source: any) => {\n                if (source.title && source.link) {\n                  categoryEvidence.sources.push({\n                    title: source.title,\n                    link: source.link,\n                    snippet: source.snippet || 'No snippet available'\n                  });\n                }\n              });\n            }\n          });\n        }\n\n        if (categoryEvidence.sources.length > 0) {\n          evidence.push(categoryEvidence);\n        }\n      }\n    });\n\n    return evidence;\n  };\n\n  const evidenceLocker = getEvidenceLocker();\n\n  // Generate search keywords from company data\n  const getSearchKeywords = (): string[] => {\n    if (!companyData && !investigationData) return [];\n    \n    const keywords: string[] = [];\n    \n    if (companyData?.legalName) {\n      keywords.push(companyData.legalName);\n      // Add variations of company name\n      const nameParts = companyData.legalName.split(' ');\n      if (nameParts.length > 1) {\n        keywords.push(nameParts.slice(0, -1).join(' ')); // Without legal form\n      }\n    }\n    \n    if (companyData?.sbiDescription) {\n      keywords.push(companyData.sbiDescription);\n    }\n    \n    if (investigationData?.public_web_data?.key_activities) {\n      keywords.push(investigationData.public_web_data.key_activities);\n    }\n    \n    return keywords.slice(0, 5); // Limit to 5 keywords\n  };\n\n  const searchKeywords = getSearchKeywords();\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"app-container\">\n        <Sidebar />\n        <main className=\"report-main\">\n          {/* Breadcrumb Navigation */}\n          <div className=\"breadcrumb\">\n            <span onClick={() => navigate('/dashboard')} className=\"breadcrumb-link\">\n              Dashboard\n            </span>\n            <span className=\"breadcrumb-separator\">›</span>\n            <span onClick={() => navigate('/dashboard')} className=\"breadcrumb-link\">\n              Recent Tickets\n            </span>\n            <span className=\"breadcrumb-separator\">›</span>\n            <span onClick={() => navigate(`/ticket/${kvkNumber}`)} className=\"breadcrumb-link\">\n              {companyName}\n            </span>\n            <span className=\"breadcrumb-separator\">›</span>\n            <span className=\"breadcrumb-current\">\n              Investigation Report\n            </span>\n          </div>\n\n          {/* Report Header */}\n          <div className=\"report-header\">\n            <div className=\"report-title-section\">\n              <h1>OPEN-SOURCE INVESTIGATION REPORT</h1>\n              {!loading && (\n                <div className={`api-status-indicator ${apiStatus}`}>\n                  {apiStatus === 'online' ? 'LIVE DATA' : 'Offline Mode'}\n                </div>\n              )}\n            </div>\n            <h2>{loading ? 'Loading Company...' : companyName}</h2>\n            <div className=\"report-meta\">\n              <span>KVK: {kvkNumber}</span>\n              <span>Generated: {new Date().toLocaleDateString()}</span>\n            </div>\n          </div>\n\n          {loading ? (\n            <div className=\"loading-content\">\n              <div className=\"loading-spinner\"></div>\n              <p>Processing investigation data...</p>\n            </div>\n          ) : (\n            <>\n              {/* Keywords Section */}\n              <div className=\"report-section\">\n                <h3>Search Keywords Used</h3>\n                <div className=\"keywords-container\">\n                  {searchKeywords.map((keyword, index) => (\n                    <span key={index} className=\"keyword-tag\">\n                      {keyword}\n                    </span>\n                  ))}\n                </div>\n              </div>\n\n          {/* Findings Section */}\n          <div className=\"report-section\">\n            <h3>FINDINGS</h3>\n            <div className=\"findings-grid\">\n              {findings.length > 0 ? (\n                findings.map((finding, index) => (\n                  <div key={index} className=\"finding-item\">\n                    <div className=\"finding-header\">\n                      <h4>{finding.category}</h4>\n                      <span className={`risk-badge ${finding.risk.toLowerCase()}`}>\n                        {finding.risk}\n                      </span>\n                    </div>\n                    <p>{finding.description}</p>\n                  </div>\n                ))\n              ) : (\n                <div className=\"no-findings\">\n                  <p>No findings available. Check browser console for API response details.</p>\n                  {investigationData && (\n                    <details style={{ marginTop: '1rem', padding: '1rem', background: '#f5f5f5', borderRadius: '8px' }}>\n                      <summary>Debug: Raw API Response</summary>\n                      <pre style={{ fontSize: '12px', overflow: 'auto', maxHeight: '300px' }}>\n                        {JSON.stringify(investigationData, null, 2)}\n                      </pre>\n                    </details>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Conclusion Section */}\n          <div className=\"report-section conclusion-section\">\n            <h3>CONCLUSION</h3>\n            <div className=\"conclusion-content\">\n              <div className=\"score-display\">\n                <div className=\"score-circle\">\n                  <span className=\"score-number\">{overallScore}</span>\n                  <span className=\"score-max\">/10</span>\n                </div>\n                <div className=\"score-label\">\n                  <span className={`risk-level ${overallScore <= 3 ? 'low' : overallScore <= 7 ? 'medium' : 'high'}`}>\n                    {overallScore <= 3 ? 'LOW RISK' : overallScore <= 7 ? 'MEDIUM RISK' : 'HIGH RISK'}\n                  </span>\n                </div>\n              </div>\n              <div className=\"conclusion-text\">\n                <p>{conclusion}</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Risk Score Breakdown */}\n          <div className=\"report-section\">\n            <h3>Risk Score Breakdown</h3>\n            <div className=\"score-breakdown\">\n              {riskScores.map((item, index) => (\n                <div key={index} className=\"score-item\">\n                  <div className=\"score-info\">\n                    <span className=\"score-category\">{item.category}</span>\n                    <span className=\"score-weight\">Weight: {item.weight}%</span>\n                  </div>\n                  <div className=\"score-bar\">\n                    <div \n                      className=\"score-fill\"\n                      style={{ width: `${(item.score / 10) * 100}%` }}\n                    ></div>\n                  </div>\n                  <span className=\"score-value\">{item.score}/10</span>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Evidence Locker */}\n          {evidenceLocker.length > 0 && (\n            <div className=\"report-section\">\n              <h3>Evidence Locker</h3>\n              <div className=\"evidence-categories\">\n                {evidenceLocker.map((category, categoryIndex) => (\n                  <div key={categoryIndex} className=\"evidence-category\">\n                    <h4>{category.category}</h4>\n                    <div className=\"evidence-sources\">\n                      {category.sources.map((source, sourceIndex) => (\n                        <div key={sourceIndex} className=\"evidence-item\">\n                          <div className=\"evidence-header\">\n                            <a \n                              href={source.link} \n                              target=\"_blank\" \n                              rel=\"noopener noreferrer\"\n                              className=\"evidence-link\"\n                            >\n                              {source.title}\n                            </a>\n                          </div>\n                          <div className=\"evidence-snippet\">\n                            {source.snippet}\n                          </div>\n                          <div className=\"evidence-url\">\n                            <small>{source.link}</small>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n              {/* Action Buttons */}\n              <div className=\"report-actions\">\n                <button \n                  className=\"action-btn primary\"\n                  onClick={() => window.print()}\n                >\n                  Download Report\n                </button>\n                <button \n                  className=\"action-btn secondary\"\n                  onClick={() => navigate(`/ticket/${kvkNumber}`)}\n                >\n                  Back to Ticket\n                </button>\n                <button \n                  className=\"action-btn secondary\"\n                  onClick={() => navigate('/dashboard')}\n                >\n                  Back to Dashboard\n                </button>\n              </div>\n            </>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default InvestigationReport;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAgBnC,MAAMC,mBAA6B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EAC1C,MAAM;IAAEC;EAAU,CAAC,GAAGZ,SAAS,CAAwB,CAAC;EACxD,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAuB,SAAS,CAAC;EAC3E,MAAM,CAACoB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrB,QAAQ,CAAM,IAAI,CAAC;EACrE,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAM,IAAI,CAAC;;EAEzD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMuB,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxC,IAAI,CAACV,SAAS,EAAE;MAEhB,IAAI;QACFG,UAAU,CAAC,IAAI,CAAC;;QAEhB;QACA,MAAMQ,WAAW,GAAG,MAAMnB,UAAU,CAACoB,iBAAiB,CAACZ,SAAS,CAAC;QACjES,cAAc,CAACE,WAAW,CAAC;;QAE3B;QACA,MAAME,MAAM,GAAG,MAAMrB,UAAU,CAACsB,WAAW,CAAC,CAAC;QAC7CT,YAAY,CAACQ,MAAM,CAACE,MAAM,KAAK,SAAS,GAAG,QAAQ,GAAG,SAAS,CAAC;;QAEhE;QACA,MAAMC,mBAAmB,GAAG,MAAMxB,UAAU,CAACyB,UAAU,CAAC;UACtDC,YAAY,EAAEP,WAAW,CAACQ,SAAS;UACnCC,QAAQ,EAAE,uBAAuBT,WAAW,CAACQ,SAAS,CAACE,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;UAC3FC,SAAS,EAAE,uBAAuBZ,WAAW,CAACQ,SAAS,CAACE,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;QAC5F,CAAC,CAAC;QAEFf,oBAAoB,CAACS,mBAAmB,CAAC;MAC3C,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;QAC1DnB,YAAY,CAAC,SAAS,CAAC;MACzB,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDO,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,CAACV,SAAS,CAAC,CAAC;EAEf,MAAM0B,WAAW,GAAG,CAAAlB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEW,SAAS,KAAI,iBAAiB;;EAE/D;EACA,MAAMQ,WAAW,GAAGA,CAAA,KAAiB;IACnCF,OAAO,CAACG,GAAG,CAAC,+BAA+B,EAAEtB,iBAAiB,CAAC;;IAE/D;IACA,MAAMuB,YAAY,GAAIC,KAAa,IAAgC;MACjE,IAAIA,KAAK,IAAI,CAAC,EAAE,OAAO,KAAK;MAC5B,IAAIA,KAAK,IAAI,CAAC,EAAE,OAAO,QAAQ;MAC/B,OAAO,MAAM;IACf,CAAC;;IAED;IACA,MAAMC,cAAc,GAAG,CACrB;MACEC,GAAG,EAAE,UAAU;MACfC,IAAI,EAAE,mBAAmB;MACzBC,WAAW,EAAE;IACf,CAAC,EACD;MACEF,GAAG,EAAE,eAAe;MACpBC,IAAI,EAAE,eAAe;MACrBC,WAAW,EAAE;IACf,CAAC,EACD;MACEF,GAAG,EAAE,gBAAgB;MACrBC,IAAI,EAAE,gBAAgB;MACtBC,WAAW,EAAE;IACf,CAAC,EACD;MACEF,GAAG,EAAE,oBAAoB;MACzBC,IAAI,EAAE,oBAAoB;MAC1BC,WAAW,EAAE;IACf,CAAC,EACD;MACEF,GAAG,EAAE,gBAAgB;MACrBC,IAAI,EAAE,gBAAgB;MACtBC,WAAW,EAAE;IACf,CAAC,EACD;MACEF,GAAG,EAAE,UAAU;MACfC,IAAI,EAAE,uCAAuC;MAC7CC,WAAW,EAAE;IACf,CAAC,CACF;IAED,MAAMC,QAAmB,GAAG,EAAE;;IAE9B;IACA,IAAI7B,iBAAiB,aAAjBA,iBAAiB,eAAjBA,iBAAiB,CAAE8B,eAAe,EAAE;MACtC,MAAMC,cAAc,GAAG/B,iBAAiB,CAAC8B,eAAe;MACxDX,OAAO,CAACG,GAAG,CAAC,sCAAsC,EAAES,cAAc,CAAC;MAEnEN,cAAc,CAACO,OAAO,CAACC,QAAQ,IAAI;QACjC,MAAMC,QAAQ,GAAGH,cAAc,CAACE,QAAQ,CAACP,GAAG,CAAC;QAC7C,IAAIQ,QAAQ,EAAE;UACZ,MAAMV,KAAK,GAAGU,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC;UACzCL,QAAQ,CAACM,IAAI,CAAC;YACZF,QAAQ,EAAEC,QAAQ,CAAC,eAAe,CAAC,IAAID,QAAQ,CAACN,IAAI;YACpDC,WAAW,EAAEK,QAAQ,CAACL,WAAW;YACjCJ,KAAK,EAAEA,KAAK;YACZY,IAAI,EAAEb,YAAY,CAACC,KAAK,CAAC;YACzBa,WAAW,EAAEH,QAAQ,CAACI,OAAO,IAAIJ,QAAQ,CAAC,kBAAkB,CAAC,IAAI,GAAGD,QAAQ,CAACN,IAAI,oCAAoCH,KAAK;UAC5H,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ;;IAEA;IAAA,KACK,IAAIxB,iBAAiB,EAAE;MAC1BmB,OAAO,CAACG,GAAG,CAAC,yDAAyD,CAAC;;MAEtE;MACA,MAAMiB,SAAS,GAAGvC,iBAAiB,CAACwC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAC1C,iBAAiB,CAACwC,UAAU,GAAG,EAAE,CAAC,GAAG,CAAC;MAClG,MAAMG,WAAW,GAAG3C,iBAAiB,CAAC6B,QAAQ,IAAI,EAAE;MACpD,MAAMe,eAAe,GAAG5C,iBAAiB,CAAC4C,eAAe,IAAI,EAAE;;MAE/D;MACAnB,cAAc,CAACO,OAAO,CAAC,CAACC,QAAQ,EAAEY,KAAK,KAAK;QAC1C,IAAIrB,KAAK,GAAGe,SAAS;QACrB,IAAIF,WAAW,GAAG,EAAE;;QAEpB;QACA,QAAQJ,QAAQ,CAACP,GAAG;UAClB,KAAK,UAAU;YACbF,KAAK,GAAGiB,IAAI,CAACK,GAAG,CAAC,CAAC,EAAEP,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;YACpCF,WAAW,GAAG,wFAAwF;YACtG,IAAInC,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAE6C,OAAO,EAAE;cACxBV,WAAW,IAAI,4BAA4BnC,WAAW,CAAC6C,OAAO,IAAI;YACpE;YACAV,WAAW,IAAI,yEAAyE;YACxF;UAEF,KAAK,eAAe;YAClBb,KAAK,GAAGe,SAAS;YACjBF,WAAW,GAAG,uEAAuE;YACrF,IAAInC,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAE8C,cAAc,EAAE;cAC/BX,WAAW,IAAI,gBAAgBnC,WAAW,CAAC8C,cAAc,WAAW;YACtE;YACAX,WAAW,IAAI,0FAA0F;YACzG;UAEF,KAAK,gBAAgB;YACnBb,KAAK,GAAGiB,IAAI,CAACK,GAAG,CAAC,CAAC,EAAEP,SAAS,GAAG,CAAC,CAAC;YAClCF,WAAW,GAAG,8FAA8F;YAC5G,IAAInC,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAE+C,SAAS,EAAE;cAC1BZ,WAAW,IAAI,eAAenC,WAAW,CAAC+C,SAAS,IAAI;YACzD;YACAZ,WAAW,IAAI,8EAA8E;YAC7F;UAEF,KAAK,oBAAoB;YACvB;YACA,MAAMa,gBAAgB,GAAGP,WAAW,CAACQ,IAAI,CAAEC,CAAS,IAClDA,CAAC,CAACrC,WAAW,CAAC,CAAC,CAACsC,QAAQ,CAAC,OAAO,CAAC,IAAID,CAAC,CAACrC,WAAW,CAAC,CAAC,CAACsC,QAAQ,CAAC,MAAM,CAAC,IAAID,CAAC,CAACrC,WAAW,CAAC,CAAC,CAACsC,QAAQ,CAAC,UAAU,CAC9G,CAAC;YACD7B,KAAK,GAAG0B,gBAAgB,GAAGT,IAAI,CAACa,GAAG,CAAC,CAAC,EAAEf,SAAS,GAAG,CAAC,CAAC,GAAGE,IAAI,CAACK,GAAG,CAAC,CAAC,EAAEP,SAAS,GAAG,CAAC,CAAC;YAClFF,WAAW,GAAG,oDAAoD;YAClE,IAAIa,gBAAgB,EAAE;cACpBb,WAAW,IAAI,+DAA+D;YAChF,CAAC,MAAM;cACLA,WAAW,IAAI,yEAAyE;YAC1F;YACAA,WAAW,IAAI,sDAAsD;YACrE;UAEF,KAAK,gBAAgB;YACnBb,KAAK,GAAGiB,IAAI,CAACK,GAAG,CAAC,CAAC,EAAEP,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;YACpCF,WAAW,GAAG,oEAAoE;YAClFA,WAAW,IAAI,mFAAmF;YAClGA,WAAW,IAAI,4DAA4D;YAC3E;UAEF,KAAK,UAAU;YACbb,KAAK,GAAGiB,IAAI,CAACK,GAAG,CAAC,CAAC,EAAEP,SAAS,GAAG,CAAC,CAAC;YAClCF,WAAW,GAAG,oDAAoD;YAClE,IAAInC,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEqD,SAAS,IAAIrD,WAAW,CAACqD,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;cAC9DnB,WAAW,IAAI,gBAAgBnC,WAAW,CAACqD,SAAS,CAACC,MAAM,6BAA6B;YAC1F;YACAnB,WAAW,IAAI,4GAA4G;YAC3H;QACJ;QAEAR,QAAQ,CAACM,IAAI,CAAC;UACZF,QAAQ,EAAEA,QAAQ,CAACN,IAAI;UACvBC,WAAW,EAAEK,QAAQ,CAACL,WAAW;UACjCJ,KAAK,EAAEiB,IAAI,CAACa,GAAG,CAAC,EAAE,EAAEb,IAAI,CAACK,GAAG,CAAC,CAAC,EAAEtB,KAAK,CAAC,CAAC;UAAE;UACzCY,IAAI,EAAEb,YAAY,CAACC,KAAK,CAAC;UACzBa,WAAW,EAAEA;QACf,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;;IAEA;IACA,IAAIR,QAAQ,CAAC2B,MAAM,KAAK,CAAC,EAAE;MACzBrC,OAAO,CAACG,GAAG,CAAC,iCAAiC,CAAC;MAC9CG,cAAc,CAACO,OAAO,CAACC,QAAQ,IAAI;QACjCJ,QAAQ,CAACM,IAAI,CAAC;UACZF,QAAQ,EAAEA,QAAQ,CAACN,IAAI;UACvBC,WAAW,EAAEK,QAAQ,CAACL,WAAW;UACjCJ,KAAK,EAAE,CAAC;UAAE;UACVY,IAAI,EAAE,KAAK;UACXC,WAAW,EAAE,GAAGJ,QAAQ,CAACN,IAAI;QAC/B,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IAEAR,OAAO,CAACG,GAAG,CAAC,gCAAgC,EAAEO,QAAQ,CAAC;IACvD,OAAOA,QAAQ;EACjB,CAAC;EAED,MAAMA,QAAQ,GAAGR,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMoC,aAAa,GAAGA,CAAA,KAAmB;IACvC,MAAMC,MAAmB,GAAG,EAAE;;IAE9B;IACA,IAAI1D,iBAAiB,aAAjBA,iBAAiB,eAAjBA,iBAAiB,CAAE8B,eAAe,EAAE;MACtC,MAAMC,cAAc,GAAG/B,iBAAiB,CAAC8B,eAAe;MAExD,MAAML,cAAc,GAAG,CACrB;QAAEC,GAAG,EAAE,UAAU;QAAEC,IAAI,EAAE,mBAAmB;QAAEgC,MAAM,EAAE;MAAG,CAAC,EAC1D;QAAEjC,GAAG,EAAE,eAAe;QAAEC,IAAI,EAAE,eAAe;QAAEgC,MAAM,EAAE;MAAG,CAAC,EAC3D;QAAEjC,GAAG,EAAE,gBAAgB;QAAEC,IAAI,EAAE,gBAAgB;QAAEgC,MAAM,EAAE;MAAG,CAAC,EAC7D;QAAEjC,GAAG,EAAE,oBAAoB;QAAEC,IAAI,EAAE,oBAAoB;QAAEgC,MAAM,EAAE;MAAG,CAAC,EACrE;QAAEjC,GAAG,EAAE,gBAAgB;QAAEC,IAAI,EAAE,gBAAgB;QAAEgC,MAAM,EAAE;MAAG,CAAC,EAC7D;QAAEjC,GAAG,EAAE,UAAU;QAAEC,IAAI,EAAE,UAAU;QAAEgC,MAAM,EAAE;MAAG,CAAC,CAClD;MAEDlC,cAAc,CAACO,OAAO,CAACC,QAAQ,IAAI;QACjC,MAAMC,QAAQ,GAAGH,cAAc,CAACE,QAAQ,CAACP,GAAG,CAAC;QAC7C,IAAIQ,QAAQ,EAAE;UACZwB,MAAM,CAACvB,IAAI,CAAC;YACVF,QAAQ,EAAEC,QAAQ,CAAC,eAAe,CAAC,IAAID,QAAQ,CAACN,IAAI;YACpDH,KAAK,EAAEU,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC;YAClCyB,MAAM,EAAE1B,QAAQ,CAAC0B;UACnB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ;;IAEA;IAAA,KACK,IAAI,CAAA3D,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEwC,UAAU,MAAKoB,SAAS,EAAE;MACpDF,MAAM,CAACvB,IAAI,CAAC;QACVF,QAAQ,EAAE,yBAAyB;QACnCT,KAAK,EAAEiB,IAAI,CAACC,KAAK,CAAC1C,iBAAiB,CAACwC,UAAU,GAAG,EAAE,CAAC;QAAE;QACtDmB,MAAM,EAAE;MACV,CAAC,CAAC;IACJ;IAEA,OAAOD,MAAM;EACf,CAAC;EAED,MAAMG,UAAU,GAAGJ,aAAa,CAAC,CAAC;;EAElC;EACA,MAAMK,YAAY,GAAG,CAAA9D,iBAAiB,aAAjBA,iBAAiB,wBAAAP,qBAAA,GAAjBO,iBAAiB,CAAE8B,eAAe,cAAArC,qBAAA,uBAAlCA,qBAAA,CAAoCsE,gBAAgB,MACpD/D,iBAAiB,aAAjBA,iBAAiB,eAAjBA,iBAAiB,CAAEwC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAC1C,iBAAiB,CAACwC,UAAU,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;;EAEvG;EACA,MAAMwB,aAAa,GAAGA,CAAA,KAAc;IAAA,IAAAC,qBAAA;IAClC,MAAMC,SAAS,GAAGJ,YAAY,IAAI,CAAC,GAAG,UAAU,GAAGA,YAAY,IAAI,CAAC,GAAG,aAAa,GAAG,WAAW;;IAElG;IACA,MAAMK,kBAAkB,GAAGnE,iBAAiB,aAAjBA,iBAAiB,wBAAAiE,qBAAA,GAAjBjE,iBAAiB,CAAEoE,eAAe,cAAAH,qBAAA,uBAAlCA,qBAAA,CAAoCI,mBAAmB;IAClF,MAAMzB,eAAe,GAAG5C,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAE4C,eAAe;IAE1D,IAAI0B,UAAU,GAAG,qDAAqDlD,WAAW,eAAe8C,SAAS,uCAAuCJ,YAAY,MAAM;IAElK,IAAIK,kBAAkB,EAAE;MACtBG,UAAU,IAAI,IAAIH,kBAAkB,CAACI,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,GAAGJ,kBAAkB,CAACX,MAAM,GAAG,GAAG,GAAG,KAAK,GAAG,EAAE,EAAE;IACzG,CAAC,MAAM,IAAIZ,eAAe,IAAI4B,KAAK,CAACC,OAAO,CAAC7B,eAAe,CAAC,IAAIA,eAAe,CAACY,MAAM,GAAG,CAAC,EAAE;MAC1Fc,UAAU,IAAI,wBAAwB1B,eAAe,CAAC,CAAC,CAAC,EAAE;IAC5D,CAAC,MAAM;MACL0B,UAAU,IAAI,+EAA+E;IAC/F;IAEA,OAAOA,UAAU;EACnB,CAAC;EAED,MAAMA,UAAU,GAAG1E,OAAO,GAAG,kCAAkC,GAAGoE,aAAa,CAAC,CAAC;;EAEjF;EACA,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,EAAC1E,iBAAiB,aAAjBA,iBAAiB,eAAjBA,iBAAiB,CAAE8B,eAAe,GAAE,OAAO,EAAE;IAElD,MAAM6C,QAAmG,GAAG,EAAE;IAC9G,MAAM5C,cAAc,GAAG/B,iBAAiB,CAAC8B,eAAe;IAExD,MAAML,cAAc,GAAG,CACrB;MAAEC,GAAG,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAoB,CAAC,EAC9C;MAAED,GAAG,EAAE,eAAe;MAAEC,IAAI,EAAE;IAAgB,CAAC,EAC/C;MAAED,GAAG,EAAE,gBAAgB;MAAEC,IAAI,EAAE;IAAiB,CAAC,EACjD;MAAED,GAAG,EAAE,oBAAoB;MAAEC,IAAI,EAAE;IAAqB,CAAC,EACzD;MAAED,GAAG,EAAE,gBAAgB;MAAEC,IAAI,EAAE;IAAiB,CAAC,EACjD;MAAED,GAAG,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAW,CAAC,CACtC;IAEDF,cAAc,CAACO,OAAO,CAACC,QAAQ,IAAI;MACjC,MAAMC,QAAQ,GAAGH,cAAc,CAACE,QAAQ,CAACP,GAAG,CAAC;MAC7C,IAAIQ,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAE0C,MAAM,EAAE;QACpB,MAAMC,gBAAgB,GAAG;UACvB5C,QAAQ,EAAEC,QAAQ,CAAC,eAAe,CAAC,IAAID,QAAQ,CAACN,IAAI;UACpDmD,OAAO,EAAE;QACX,CAAC;;QAED;QACA,IAAI,OAAO5C,QAAQ,CAAC0C,MAAM,KAAK,QAAQ,EAAE;UACvCG,MAAM,CAACC,IAAI,CAAC9C,QAAQ,CAAC0C,MAAM,CAAC,CAAC5C,OAAO,CAACiD,UAAU,IAAI;YACjD,MAAMC,UAAU,GAAGhD,QAAQ,CAAC0C,MAAM,CAACK,UAAU,CAAC;YAC9C,IAAIT,KAAK,CAACC,OAAO,CAACS,UAAU,CAAC,EAAE;cAC7BA,UAAU,CAAClD,OAAO,CAAEmD,MAAW,IAAK;gBAClC,IAAIA,MAAM,CAACC,KAAK,IAAID,MAAM,CAACE,IAAI,EAAE;kBAC/BR,gBAAgB,CAACC,OAAO,CAAC3C,IAAI,CAAC;oBAC5BiD,KAAK,EAAED,MAAM,CAACC,KAAK;oBACnBC,IAAI,EAAEF,MAAM,CAACE,IAAI;oBACjBC,OAAO,EAAEH,MAAM,CAACG,OAAO,IAAI;kBAC7B,CAAC,CAAC;gBACJ;cACF,CAAC,CAAC;YACJ;UACF,CAAC,CAAC;QACJ;QAEA,IAAIT,gBAAgB,CAACC,OAAO,CAACtB,MAAM,GAAG,CAAC,EAAE;UACvCmB,QAAQ,CAACxC,IAAI,CAAC0C,gBAAgB,CAAC;QACjC;MACF;IACF,CAAC,CAAC;IAEF,OAAOF,QAAQ;EACjB,CAAC;EAED,MAAMY,cAAc,GAAGb,iBAAiB,CAAC,CAAC;;EAE1C;EACA,MAAMc,iBAAiB,GAAGA,CAAA,KAAgB;IAAA,IAAAC,sBAAA;IACxC,IAAI,CAACvF,WAAW,IAAI,CAACF,iBAAiB,EAAE,OAAO,EAAE;IAEjD,MAAM0F,QAAkB,GAAG,EAAE;IAE7B,IAAIxF,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEW,SAAS,EAAE;MAC1B6E,QAAQ,CAACvD,IAAI,CAACjC,WAAW,CAACW,SAAS,CAAC;MACpC;MACA,MAAM8E,SAAS,GAAGzF,WAAW,CAACW,SAAS,CAAC+E,KAAK,CAAC,GAAG,CAAC;MAClD,IAAID,SAAS,CAACnC,MAAM,GAAG,CAAC,EAAE;QACxBkC,QAAQ,CAACvD,IAAI,CAACwD,SAAS,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACnD;IACF;IAEA,IAAI5F,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAE8C,cAAc,EAAE;MAC/B0C,QAAQ,CAACvD,IAAI,CAACjC,WAAW,CAAC8C,cAAc,CAAC;IAC3C;IAEA,IAAIhD,iBAAiB,aAAjBA,iBAAiB,gBAAAyF,sBAAA,GAAjBzF,iBAAiB,CAAEoE,eAAe,cAAAqB,sBAAA,eAAlCA,sBAAA,CAAoCM,cAAc,EAAE;MACtDL,QAAQ,CAACvD,IAAI,CAACnC,iBAAiB,CAACoE,eAAe,CAAC2B,cAAc,CAAC;IACjE;IAEA,OAAOL,QAAQ,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMG,cAAc,GAAGR,iBAAiB,CAAC,CAAC;EAG1C,oBACEpG,OAAA;IAAK6G,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB9G,OAAA,CAACJ,MAAM;MAAAmH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVlH,OAAA;MAAK6G,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B9G,OAAA,CAACH,OAAO;QAAAkH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXlH,OAAA;QAAM6G,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAE3B9G,OAAA;UAAK6G,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB9G,OAAA;YAAMmH,OAAO,EAAEA,CAAA,KAAM5G,QAAQ,CAAC,YAAY,CAAE;YAACsG,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAC;UAEzE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACPlH,OAAA;YAAM6G,SAAS,EAAC,sBAAsB;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC/ClH,OAAA;YAAMmH,OAAO,EAAEA,CAAA,KAAM5G,QAAQ,CAAC,YAAY,CAAE;YAACsG,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAC;UAEzE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACPlH,OAAA;YAAM6G,SAAS,EAAC,sBAAsB;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC/ClH,OAAA;YAAMmH,OAAO,EAAEA,CAAA,KAAM5G,QAAQ,CAAC,WAAWD,SAAS,EAAE,CAAE;YAACuG,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAC/E9E;UAAW;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC,eACPlH,OAAA;YAAM6G,SAAS,EAAC,sBAAsB;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC/ClH,OAAA;YAAM6G,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAC;UAErC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAGNlH,OAAA;UAAK6G,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5B9G,OAAA;YAAK6G,SAAS,EAAC,sBAAsB;YAAAC,QAAA,gBACnC9G,OAAA;cAAA8G,QAAA,EAAI;YAAgC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACxC,CAAC1G,OAAO,iBACPR,OAAA;cAAK6G,SAAS,EAAE,wBAAwBnG,SAAS,EAAG;cAAAoG,QAAA,EACjDpG,SAAS,KAAK,QAAQ,GAAG,WAAW,GAAG;YAAc;cAAAqG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACNlH,OAAA;YAAA8G,QAAA,EAAKtG,OAAO,GAAG,oBAAoB,GAAGwB;UAAW;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvDlH,OAAA;YAAK6G,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1B9G,OAAA;cAAA8G,QAAA,GAAM,OAAK,EAACxG,SAAS;YAAA;cAAAyG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7BlH,OAAA;cAAA8G,QAAA,GAAM,aAAW,EAAC,IAAIM,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAEL1G,OAAO,gBACNR,OAAA;UAAK6G,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B9G,OAAA;YAAK6G,SAAS,EAAC;UAAiB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACvClH,OAAA;YAAA8G,QAAA,EAAG;UAAgC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,gBAENlH,OAAA,CAAAE,SAAA;UAAA4G,QAAA,gBAEE9G,OAAA;YAAK6G,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7B9G,OAAA;cAAA8G,QAAA,EAAI;YAAoB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC7BlH,OAAA;cAAK6G,SAAS,EAAC,oBAAoB;cAAAC,QAAA,EAChCF,cAAc,CAACU,GAAG,CAAC,CAACC,OAAO,EAAE9D,KAAK,kBACjCzD,OAAA;gBAAkB6G,SAAS,EAAC,aAAa;gBAAAC,QAAA,EACtCS;cAAO,GADC9D,KAAK;gBAAAsD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEV,CACP;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGVlH,OAAA;YAAK6G,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7B9G,OAAA;cAAA8G,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjBlH,OAAA;cAAK6G,SAAS,EAAC,eAAe;cAAAC,QAAA,EAC3BrE,QAAQ,CAAC2B,MAAM,GAAG,CAAC,GAClB3B,QAAQ,CAAC6E,GAAG,CAAC,CAACE,OAAO,EAAE/D,KAAK,kBAC1BzD,OAAA;gBAAiB6G,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBACvC9G,OAAA;kBAAK6G,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,gBAC7B9G,OAAA;oBAAA8G,QAAA,EAAKU,OAAO,CAAC3E;kBAAQ;oBAAAkE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAC3BlH,OAAA;oBAAM6G,SAAS,EAAE,cAAcW,OAAO,CAACxE,IAAI,CAACrB,WAAW,CAAC,CAAC,EAAG;oBAAAmF,QAAA,EACzDU,OAAO,CAACxE;kBAAI;oBAAA+D,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACT,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACNlH,OAAA;kBAAA8G,QAAA,EAAIU,OAAO,CAAChF;gBAAW;kBAAAuE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA,GAPpBzD,KAAK;gBAAAsD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAQV,CACN,CAAC,gBAEFlH,OAAA;gBAAK6G,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBAC1B9G,OAAA;kBAAA8G,QAAA,EAAG;gBAAsE;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC,EAC5EtG,iBAAiB,iBAChBZ,OAAA;kBAASyH,KAAK,EAAE;oBAAEC,SAAS,EAAE,MAAM;oBAAEC,OAAO,EAAE,MAAM;oBAAEC,UAAU,EAAE,SAAS;oBAAEC,YAAY,EAAE;kBAAM,CAAE;kBAAAf,QAAA,gBACjG9G,OAAA;oBAAA8G,QAAA,EAAS;kBAAuB;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAS,CAAC,eAC1ClH,OAAA;oBAAKyH,KAAK,EAAE;sBAAEK,QAAQ,EAAE,MAAM;sBAAEC,QAAQ,EAAE,MAAM;sBAAEC,SAAS,EAAE;oBAAQ,CAAE;oBAAAlB,QAAA,EACpEmB,IAAI,CAACC,SAAS,CAACtH,iBAAiB,EAAE,IAAI,EAAE,CAAC;kBAAC;oBAAAmG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACxC,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CACV;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE;YACN;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGNlH,OAAA;YAAK6G,SAAS,EAAC,mCAAmC;YAAAC,QAAA,gBAChD9G,OAAA;cAAA8G,QAAA,EAAI;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnBlH,OAAA;cAAK6G,SAAS,EAAC,oBAAoB;cAAAC,QAAA,gBACjC9G,OAAA;gBAAK6G,SAAS,EAAC,eAAe;gBAAAC,QAAA,gBAC5B9G,OAAA;kBAAK6G,SAAS,EAAC,cAAc;kBAAAC,QAAA,gBAC3B9G,OAAA;oBAAM6G,SAAS,EAAC,cAAc;oBAAAC,QAAA,EAAEpC;kBAAY;oBAAAqC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eACpDlH,OAAA;oBAAM6G,SAAS,EAAC,WAAW;oBAAAC,QAAA,EAAC;kBAAG;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnC,CAAC,eACNlH,OAAA;kBAAK6G,SAAS,EAAC,aAAa;kBAAAC,QAAA,eAC1B9G,OAAA;oBAAM6G,SAAS,EAAE,cAAcnC,YAAY,IAAI,CAAC,GAAG,KAAK,GAAGA,YAAY,IAAI,CAAC,GAAG,QAAQ,GAAG,MAAM,EAAG;oBAAAoC,QAAA,EAChGpC,YAAY,IAAI,CAAC,GAAG,UAAU,GAAGA,YAAY,IAAI,CAAC,GAAG,aAAa,GAAG;kBAAW;oBAAAqC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC7E;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACNlH,OAAA;gBAAK6G,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,eAC9B9G,OAAA;kBAAA8G,QAAA,EAAI5B;gBAAU;kBAAA6B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGNlH,OAAA;YAAK6G,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7B9G,OAAA;cAAA8G,QAAA,EAAI;YAAoB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC7BlH,OAAA;cAAK6G,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAC7BrC,UAAU,CAAC6C,GAAG,CAAC,CAACa,IAAI,EAAE1E,KAAK,kBAC1BzD,OAAA;gBAAiB6G,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACrC9G,OAAA;kBAAK6G,SAAS,EAAC,YAAY;kBAAAC,QAAA,gBACzB9G,OAAA;oBAAM6G,SAAS,EAAC,gBAAgB;oBAAAC,QAAA,EAAEqB,IAAI,CAACtF;kBAAQ;oBAAAkE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eACvDlH,OAAA;oBAAM6G,SAAS,EAAC,cAAc;oBAAAC,QAAA,GAAC,UAAQ,EAACqB,IAAI,CAAC5D,MAAM,EAAC,GAAC;kBAAA;oBAAAwC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzD,CAAC,eACNlH,OAAA;kBAAK6G,SAAS,EAAC,WAAW;kBAAAC,QAAA,eACxB9G,OAAA;oBACE6G,SAAS,EAAC,YAAY;oBACtBY,KAAK,EAAE;sBAAEW,KAAK,EAAE,GAAID,IAAI,CAAC/F,KAAK,GAAG,EAAE,GAAI,GAAG;oBAAI;kBAAE;oBAAA2E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5C;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACNlH,OAAA;kBAAM6G,SAAS,EAAC,aAAa;kBAAAC,QAAA,GAAEqB,IAAI,CAAC/F,KAAK,EAAC,KAAG;gBAAA;kBAAA2E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA,GAX5CzD,KAAK;gBAAAsD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAYV,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EAGLf,cAAc,CAAC/B,MAAM,GAAG,CAAC,iBACxBpE,OAAA;YAAK6G,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7B9G,OAAA;cAAA8G,QAAA,EAAI;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACxBlH,OAAA;cAAK6G,SAAS,EAAC,qBAAqB;cAAAC,QAAA,EACjCX,cAAc,CAACmB,GAAG,CAAC,CAACzE,QAAQ,EAAEwF,aAAa,kBAC1CrI,OAAA;gBAAyB6G,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,gBACpD9G,OAAA;kBAAA8G,QAAA,EAAKjE,QAAQ,CAACA;gBAAQ;kBAAAkE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC5BlH,OAAA;kBAAK6G,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,EAC9BjE,QAAQ,CAAC6C,OAAO,CAAC4B,GAAG,CAAC,CAACvB,MAAM,EAAEuC,WAAW,kBACxCtI,OAAA;oBAAuB6G,SAAS,EAAC,eAAe;oBAAAC,QAAA,gBAC9C9G,OAAA;sBAAK6G,SAAS,EAAC,iBAAiB;sBAAAC,QAAA,eAC9B9G,OAAA;wBACEuI,IAAI,EAAExC,MAAM,CAACE,IAAK;wBAClBuC,MAAM,EAAC,QAAQ;wBACfC,GAAG,EAAC,qBAAqB;wBACzB5B,SAAS,EAAC,eAAe;wBAAAC,QAAA,EAExBf,MAAM,CAACC;sBAAK;wBAAAe,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACZ;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACD,CAAC,eACNlH,OAAA;sBAAK6G,SAAS,EAAC,kBAAkB;sBAAAC,QAAA,EAC9Bf,MAAM,CAACG;oBAAO;sBAAAa,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACZ,CAAC,eACNlH,OAAA;sBAAK6G,SAAS,EAAC,cAAc;sBAAAC,QAAA,eAC3B9G,OAAA;wBAAA8G,QAAA,EAAQf,MAAM,CAACE;sBAAI;wBAAAc,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACzB,CAAC;kBAAA,GAhBEoB,WAAW;oBAAAvB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAiBhB,CACN;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA,GAvBEmB,aAAa;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAwBlB,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,eAGGlH,OAAA;YAAK6G,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7B9G,OAAA;cACE6G,SAAS,EAAC,oBAAoB;cAC9BM,OAAO,EAAEA,CAAA,KAAMuB,MAAM,CAACC,KAAK,CAAC,CAAE;cAAA7B,QAAA,EAC/B;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTlH,OAAA;cACE6G,SAAS,EAAC,sBAAsB;cAChCM,OAAO,EAAEA,CAAA,KAAM5G,QAAQ,CAAC,WAAWD,SAAS,EAAE,CAAE;cAAAwG,QAAA,EACjD;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTlH,OAAA;cACE6G,SAAS,EAAC,sBAAsB;cAChCM,OAAO,EAAEA,CAAA,KAAM5G,QAAQ,CAAC,YAAY,CAAE;cAAAuG,QAAA,EACvC;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA,eACN,CACH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9G,EAAA,CAzjBID,mBAA6B;EAAA,QACXT,SAAS,EACdC,WAAW;AAAA;AAAAiJ,EAAA,GAFxBzI,mBAA6B;AA2jBnC,eAAeA,mBAAmB;AAAC,IAAAyI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}