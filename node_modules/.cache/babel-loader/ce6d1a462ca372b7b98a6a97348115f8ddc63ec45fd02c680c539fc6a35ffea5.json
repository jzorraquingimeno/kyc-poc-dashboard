{"ast":null,"code":"import React,{useState,useEffect,useMemo}from'react';import{useParams,useNavigate}from'react-router-dom';import Header from'./Header';import Sidebar from'./Sidebar';import{apiService}from'../services/api';import'./OpenSourceInvestigation.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const OpenSourceInvestigation=()=>{var _steps$currentStep,_steps$currentStep2;const{kvkNumber}=useParams();const navigate=useNavigate();const[currentStep,setCurrentStep]=useState(0);const[currentSubActivity,setCurrentSubActivity]=useState(0);const[progress,setProgress]=useState(0);const[isComplete,setIsComplete]=useState(false);const[isProcessingResults,setIsProcessingResults]=useState(false);const[apiStatus,setApiStatus]=useState('offline');const[companyInfo,setCompanyInfo]=useState(null);const[loading,setLoading]=useState(true);const steps=useMemo(()=>[{id:1,title:'Open-source Investigation',subActivities:['Geographical Risk Investigation','Industry Risk Investigation','Structure Risk Investigation','Adverse Media Risk Investigation','Sanctions List Check','Politically Exposed Person (PEP)']},{id:2,title:'Disambiguation & Validation',subActivities:['Cross-Reference Checks','Adverse Media Validation','PEP Validation','Sanctions Hit Validation','Consolidate and Deduplicate','Flag Inconsistencies']},{id:3,title:'Regulatory Compliance & Risk Assessor',subActivities:['Regulatory Compliance Mapping','Determine Regulatory Flags','Generate Compliance Notes','Assign Weight','Aggregate Scores','Apply Risk Scoring Methodology']},{id:4,title:'Report Generation & Evidence Locker',subActivities:['Summary Generation','Risk Assessment','Risk Findings','Regulatory Compliance Summary','Evidence Locker Compilation','Report Visualization']}],[]);// Load company data from API\nuseEffect(()=>{const loadCompanyData=async()=>{if(!kvkNumber)return;try{setLoading(true);// Check API health\nconst health=await apiService.healthCheck();setApiStatus(health.status==='healthy'?'online':'offline');// Load company details\nconst companyData=await apiService.getCompanyDetails(kvkNumber);setCompanyInfo(companyData);}catch(error){console.error('Failed to load company data:',error);setApiStatus('offline');// Fallback to basic company info if API fails\nsetCompanyInfo({legalName:'Unknown Company',address:'Address not available',kvkNumber:kvkNumber,legalForm:'Unknown',foundingDate:'Unknown',status:'Unknown',sbiCode:'Unknown',sbiDescription:'Unknown',directors:['Unknown']});}finally{setLoading(false);}};loadCompanyData();},[kvkNumber]);// Handle investigation progress with minimum 10-second animation\nuseEffect(()=>{if(!companyInfo||loading)return;const minimumAnimationTime=10000;// 10 seconds minimum\nconst totalSubActivities=steps.reduce((acc,step)=>acc+step.subActivities.length,0);const intervalDuration=minimumAnimationTime/totalSubActivities;let animationStartTime=Date.now();let apiCallInitiated=false;const interval=setInterval(()=>{setCurrentSubActivity(prev=>{const nextSubActivity=prev+1;// Calculate which step we're in based on sub-activities completed\nlet currentStepIndex=0;let activitiesCount=0;for(let i=0;i<steps.length;i++){if(nextSubActivity<=activitiesCount+steps[i].subActivities.length){currentStepIndex=i;break;}activitiesCount+=steps[i].subActivities.length;}setCurrentStep(currentStepIndex);setProgress(nextSubActivity/totalSubActivities*100);// Check if we've completed animation and minimum time has passed\nif(nextSubActivity>=totalSubActivities){setIsComplete(true);clearInterval(interval);const elapsedTime=Date.now()-animationStartTime;// Start API call if minimum time has passed\nif(elapsedTime>=minimumAnimationTime&&!apiCallInitiated){apiCallInitiated=true;processInvestigation();}else if(!apiCallInitiated){// Wait for remaining time before starting API call\nconst remainingTime=minimumAnimationTime-elapsedTime;setTimeout(()=>{if(!apiCallInitiated){apiCallInitiated=true;processInvestigation();}},remainingTime);}}return nextSubActivity;});},intervalDuration);// Function to handle API processing\nconst processInvestigation=async()=>{setIsProcessingResults(true);try{// Check API health\nconst health=await apiService.healthCheck();setApiStatus(health.status==='healthy'?'online':'offline');// Process KYC investigation\nconst companyName=(companyInfo===null||companyInfo===void 0?void 0:companyInfo.legalName)||'Unknown Company';const investigationResult=await apiService.processKYC({company_name:companyName,home_url:`https://example.com/${companyName.toLowerCase().replace(/\\s+/g,'-')}`,about_url:`https://example.com/${companyName.toLowerCase().replace(/\\s+/g,'-')}/about`});// Store investigation result for report page\n// The result will be retrieved again in the InvestigationReport component\n// Navigate to report after processing\nsetTimeout(()=>{navigate(`/investigation-report/${kvkNumber}`);},1000);}catch(error){console.error('Failed to process KYC investigation:',error);setApiStatus('offline');// Still navigate to report even if API fails (will use mock data)\nsetTimeout(()=>{navigate(`/investigation-report/${kvkNumber}`);},1000);}};return()=>clearInterval(interval);},[kvkNumber,navigate,steps,companyInfo,loading]);const getSubActivityIndex=globalIndex=>{let count=0;for(let i=0;i<currentStep;i++){count+=steps[i].subActivities.length;}return globalIndex-count;};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsxs(\"main\",{className:\"investigation-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"breadcrumb\",children:[/*#__PURE__*/_jsx(\"span\",{onClick:()=>navigate('/dashboard'),className:\"breadcrumb-link\",children:\"Dashboard\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"span\",{onClick:()=>navigate('/dashboard'),className:\"breadcrumb-link\",children:\"Recent Tickets\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"span\",{onClick:()=>navigate(`/ticket/${kvkNumber}`),className:\"breadcrumb-link\",children:loading?'Loading...':(companyInfo===null||companyInfo===void 0?void 0:companyInfo.legalName)||'Unknown Company'}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-current\",children:\"Open Source Investigation\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"investigation-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"investigation-title-section\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Open Source Investigation\"}),isComplete&&/*#__PURE__*/_jsx(\"div\",{className:`api-status-indicator ${apiStatus}`,children:apiStatus==='online'?'LIVE DATA':'Offline Mode'})]}),/*#__PURE__*/_jsx(\"p\",{children:loading?'Loading company information...':`${(companyInfo===null||companyInfo===void 0?void 0:companyInfo.legalName)||'Unknown Company'} (KVK: ${(companyInfo===null||companyInfo===void 0?void 0:companyInfo.kvkNumber)||kvkNumber})`})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:`${progress}%`}})}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-steps\",children:steps.map((step,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`progress-step ${index<=currentStep?'active':''} ${index===currentStep?'current':''}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"step-number\",children:step.id}),/*#__PURE__*/_jsx(\"div\",{className:\"step-title\",children:step.title})]},step.id))})]}),!isComplete&&/*#__PURE__*/_jsxs(\"div\",{className:\"activities-container\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Step \",currentStep+1,\": \",(_steps$currentStep=steps[currentStep])===null||_steps$currentStep===void 0?void 0:_steps$currentStep.title]}),/*#__PURE__*/_jsx(\"div\",{className:\"activities-grid\",children:(_steps$currentStep2=steps[currentStep])===null||_steps$currentStep2===void 0?void 0:_steps$currentStep2.subActivities.map((activity,index)=>{const subActivityIndex=getSubActivityIndex(currentSubActivity);const isActive=index===subActivityIndex;const isCompleted=index<subActivityIndex;return/*#__PURE__*/_jsxs(\"div\",{className:`activity-item ${isActive?'active':''} ${isCompleted?'completed':''}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"activity-icon\",children:isCompleted?'✓':isActive?'🤖':'○'}),/*#__PURE__*/_jsx(\"div\",{className:\"activity-text\",children:activity}),isActive&&/*#__PURE__*/_jsx(\"div\",{className:\"activity-spinner\",children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"})})]},index);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ai-agents-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"agent-animation\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"agent-icon\",children:\"\\uD83E\\uDD16\"}),/*#__PURE__*/_jsx(\"div\",{className:\"agent-text\",children:\"AI Agent Processing...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"agent-animation\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"agent-icon\",children:\"\\uD83D\\uDD0D\"}),/*#__PURE__*/_jsx(\"div\",{className:\"agent-text\",children:\"Analyzing Data Sources...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"agent-animation\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"agent-icon\",children:\"\\uD83D\\uDCCA\"}),/*#__PURE__*/_jsx(\"div\",{className:\"agent-text\",children:\"Generating Insights...\"})]})]}),isComplete&&!isProcessingResults&&/*#__PURE__*/_jsxs(\"div\",{className:\"completion-message\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Investigation Complete!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Preparing to process results...\"})]}),isProcessingResults&&/*#__PURE__*/_jsxs(\"div\",{className:\"completion-message\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Processing Investigation Results\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Generating comprehensive report from API data...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"})]})]})]})]});};export default OpenSourceInvestigation;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useParams","useNavigate","Header","Sidebar","apiService","jsx","_jsx","jsxs","_jsxs","OpenSourceInvestigation","_steps$currentStep","_steps$currentStep2","kvkNumber","navigate","currentStep","setCurrentStep","currentSubActivity","setCurrentSubActivity","progress","setProgress","isComplete","setIsComplete","isProcessingResults","setIsProcessingResults","apiStatus","setApiStatus","companyInfo","setCompanyInfo","loading","setLoading","steps","id","title","subActivities","loadCompanyData","health","healthCheck","status","companyData","getCompanyDetails","error","console","legalName","address","legalForm","foundingDate","sbiCode","sbiDescription","directors","minimumAnimationTime","totalSubActivities","reduce","acc","step","length","intervalDuration","animationStartTime","Date","now","apiCallInitiated","interval","setInterval","prev","nextSubActivity","currentStepIndex","activitiesCount","i","clearInterval","elapsedTime","processInvestigation","remainingTime","setTimeout","companyName","investigationResult","processKYC","company_name","home_url","toLowerCase","replace","about_url","getSubActivityIndex","globalIndex","count","className","children","onClick","style","width","map","index","activity","subActivityIndex","isActive","isCompleted"],"sources":["/home/jzorraquingimeno/dashboard-frontend/src/components/OpenSourceInvestigation.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport { apiService, CompanyInfo } from '../services/api';\nimport './OpenSourceInvestigation.css';\n\ninterface Step {\n  id: number;\n  title: string;\n  subActivities: string[];\n}\n\n\nconst OpenSourceInvestigation: React.FC = () => {\n  const { kvkNumber } = useParams<{ kvkNumber: string }>();\n  const navigate = useNavigate();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [currentSubActivity, setCurrentSubActivity] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [isComplete, setIsComplete] = useState(false);\n  const [isProcessingResults, setIsProcessingResults] = useState(false);\n  const [apiStatus, setApiStatus] = useState<'online' | 'offline'>('offline');\n  const [companyInfo, setCompanyInfo] = useState<CompanyInfo | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const steps: Step[] = useMemo(() => [\n    {\n      id: 1,\n      title: 'Open-source Investigation',\n      subActivities: [\n        'Geographical Risk Investigation',\n        'Industry Risk Investigation', \n        'Structure Risk Investigation',\n        'Adverse Media Risk Investigation',\n        'Sanctions List Check',\n        'Politically Exposed Person (PEP)'\n      ]\n    },\n    {\n      id: 2,\n      title: 'Disambiguation & Validation',\n      subActivities: [\n        'Cross-Reference Checks',\n        'Adverse Media Validation',\n        'PEP Validation',\n        'Sanctions Hit Validation',\n        'Consolidate and Deduplicate',\n        'Flag Inconsistencies'\n      ]\n    },\n    {\n      id: 3,\n      title: 'Regulatory Compliance & Risk Assessor',\n      subActivities: [\n        'Regulatory Compliance Mapping',\n        'Determine Regulatory Flags',\n        'Generate Compliance Notes',\n        'Assign Weight',\n        'Aggregate Scores',\n        'Apply Risk Scoring Methodology'\n      ]\n    },\n    {\n      id: 4,\n      title: 'Report Generation & Evidence Locker',\n      subActivities: [\n        'Summary Generation',\n        'Risk Assessment',\n        'Risk Findings',\n        'Regulatory Compliance Summary',\n        'Evidence Locker Compilation',\n        'Report Visualization'\n      ]\n    }\n  ], []);\n\n  // Load company data from API\n  useEffect(() => {\n    const loadCompanyData = async () => {\n      if (!kvkNumber) return;\n\n      try {\n        setLoading(true);\n        \n        // Check API health\n        const health = await apiService.healthCheck();\n        setApiStatus(health.status === 'healthy' ? 'online' : 'offline');\n\n        // Load company details\n        const companyData = await apiService.getCompanyDetails(kvkNumber);\n        setCompanyInfo(companyData);\n      } catch (error) {\n        console.error('Failed to load company data:', error);\n        setApiStatus('offline');\n        \n        // Fallback to basic company info if API fails\n        setCompanyInfo({\n          legalName: 'Unknown Company',\n          address: 'Address not available',\n          kvkNumber: kvkNumber,\n          legalForm: 'Unknown',\n          foundingDate: 'Unknown',\n          status: 'Unknown',\n          sbiCode: 'Unknown',\n          sbiDescription: 'Unknown',\n          directors: ['Unknown']\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadCompanyData();\n  }, [kvkNumber]);\n\n  // Handle investigation progress with minimum 10-second animation\n  useEffect(() => {\n    if (!companyInfo || loading) return;\n    \n    const minimumAnimationTime = 10000; // 10 seconds minimum\n    const totalSubActivities = steps.reduce((acc, step) => acc + step.subActivities.length, 0);\n    const intervalDuration = minimumAnimationTime / totalSubActivities;\n\n    let animationStartTime = Date.now();\n    let apiCallInitiated = false;\n\n    const interval = setInterval(() => {\n      setCurrentSubActivity(prev => {\n        const nextSubActivity = prev + 1;\n        \n        // Calculate which step we're in based on sub-activities completed\n        let currentStepIndex = 0;\n        let activitiesCount = 0;\n        \n        for (let i = 0; i < steps.length; i++) {\n          if (nextSubActivity <= activitiesCount + steps[i].subActivities.length) {\n            currentStepIndex = i;\n            break;\n          }\n          activitiesCount += steps[i].subActivities.length;\n        }\n        \n        setCurrentStep(currentStepIndex);\n        setProgress((nextSubActivity / totalSubActivities) * 100);\n        \n        // Check if we've completed animation and minimum time has passed\n        if (nextSubActivity >= totalSubActivities) {\n          setIsComplete(true);\n          clearInterval(interval);\n          \n          const elapsedTime = Date.now() - animationStartTime;\n          \n          // Start API call if minimum time has passed\n          if (elapsedTime >= minimumAnimationTime && !apiCallInitiated) {\n            apiCallInitiated = true;\n            processInvestigation();\n          } else if (!apiCallInitiated) {\n            // Wait for remaining time before starting API call\n            const remainingTime = minimumAnimationTime - elapsedTime;\n            setTimeout(() => {\n              if (!apiCallInitiated) {\n                apiCallInitiated = true;\n                processInvestigation();\n              }\n            }, remainingTime);\n          }\n        }\n        \n        return nextSubActivity;\n      });\n    }, intervalDuration);\n\n    // Function to handle API processing\n    const processInvestigation = async () => {\n      setIsProcessingResults(true);\n      \n      try {\n        // Check API health\n        const health = await apiService.healthCheck();\n        setApiStatus(health.status === 'healthy' ? 'online' : 'offline');\n\n        // Process KYC investigation\n        const companyName = companyInfo?.legalName || 'Unknown Company';\n        const investigationResult = await apiService.processKYC({\n          company_name: companyName,\n          home_url: `https://example.com/${companyName.toLowerCase().replace(/\\s+/g, '-')}`,\n          about_url: `https://example.com/${companyName.toLowerCase().replace(/\\s+/g, '-')}/about`\n        });\n\n        // Store investigation result for report page\n        // The result will be retrieved again in the InvestigationReport component\n        \n        // Navigate to report after processing\n        setTimeout(() => {\n          navigate(`/investigation-report/${kvkNumber}`);\n        }, 1000);\n      } catch (error) {\n        console.error('Failed to process KYC investigation:', error);\n        setApiStatus('offline');\n        \n        // Still navigate to report even if API fails (will use mock data)\n        setTimeout(() => {\n          navigate(`/investigation-report/${kvkNumber}`);\n        }, 1000);\n      }\n    };\n\n    return () => clearInterval(interval);\n  }, [kvkNumber, navigate, steps, companyInfo, loading]);\n\n  const getSubActivityIndex = (globalIndex: number) => {\n    let count = 0;\n    for (let i = 0; i < currentStep; i++) {\n      count += steps[i].subActivities.length;\n    }\n    return globalIndex - count;\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"app-container\">\n        <Sidebar />\n        <main className=\"investigation-main\">\n          {/* Breadcrumb Navigation */}\n          <div className=\"breadcrumb\">\n            <span onClick={() => navigate('/dashboard')} className=\"breadcrumb-link\">\n              Dashboard\n            </span>\n            <span className=\"breadcrumb-separator\">›</span>\n            <span onClick={() => navigate('/dashboard')} className=\"breadcrumb-link\">\n              Recent Tickets\n            </span>\n            <span className=\"breadcrumb-separator\">›</span>\n            <span onClick={() => navigate(`/ticket/${kvkNumber}`)} className=\"breadcrumb-link\">\n              {loading ? 'Loading...' : companyInfo?.legalName || 'Unknown Company'}\n            </span>\n            <span className=\"breadcrumb-separator\">›</span>\n            <span className=\"breadcrumb-current\">\n              Open Source Investigation\n            </span>\n          </div>\n\n          {/* Investigation Header */}\n          <div className=\"investigation-header\">\n            <div className=\"investigation-title-section\">\n              <h1>Open Source Investigation</h1>\n              {isComplete && (\n                <div className={`api-status-indicator ${apiStatus}`}>\n                  {apiStatus === 'online' ? 'LIVE DATA' : 'Offline Mode'}\n                </div>\n              )}\n            </div>\n            <p>\n              {loading ? 'Loading company information...' : \n                `${companyInfo?.legalName || 'Unknown Company'} (KVK: ${companyInfo?.kvkNumber || kvkNumber})`\n              }\n            </p>\n          </div>\n\n          {/* Progress Bar */}\n          <div className=\"progress-container\">\n            <div className=\"progress-bar\">\n              <div \n                className=\"progress-fill\" \n                style={{ width: `${progress}%` }}\n              ></div>\n            </div>\n            <div className=\"progress-steps\">\n              {steps.map((step, index) => (\n                <div \n                  key={step.id} \n                  className={`progress-step ${index <= currentStep ? 'active' : ''} ${index === currentStep ? 'current' : ''}`}\n                >\n                  <div className=\"step-number\">{step.id}</div>\n                  <div className=\"step-title\">{step.title}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Current Step Activities */}\n          {!isComplete && (\n            <div className=\"activities-container\">\n              <h2>Step {currentStep + 1}: {steps[currentStep]?.title}</h2>\n              <div className=\"activities-grid\">\n                {steps[currentStep]?.subActivities.map((activity, index) => {\n                  const subActivityIndex = getSubActivityIndex(currentSubActivity);\n                  const isActive = index === subActivityIndex;\n                  const isCompleted = index < subActivityIndex;\n                  \n                  return (\n                    <div \n                      key={index} \n                      className={`activity-item ${isActive ? 'active' : ''} ${isCompleted ? 'completed' : ''}`}\n                    >\n                      <div className=\"activity-icon\">\n                        {isCompleted ? '✓' : isActive ? '🤖' : '○'}\n                      </div>\n                      <div className=\"activity-text\">{activity}</div>\n                      {isActive && (\n                        <div className=\"activity-spinner\">\n                          <div className=\"spinner\"></div>\n                        </div>\n                      )}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n\n          {/* AI Agents Animation */}\n          <div className=\"ai-agents-container\">\n            <div className=\"agent-animation\">\n              <div className=\"agent-icon\">🤖</div>\n              <div className=\"agent-text\">AI Agent Processing...</div>\n            </div>\n            <div className=\"agent-animation\">\n              <div className=\"agent-icon\">🔍</div>\n              <div className=\"agent-text\">Analyzing Data Sources...</div>\n            </div>\n            <div className=\"agent-animation\">\n              <div className=\"agent-icon\">📊</div>\n              <div className=\"agent-text\">Generating Insights...</div>\n            </div>\n          </div>\n\n          {/* Completion Message */}\n          {isComplete && !isProcessingResults && (\n            <div className=\"completion-message\">\n              <h2>Investigation Complete!</h2>\n              <p>Preparing to process results...</p>\n            </div>\n          )}\n          \n          {/* Processing Results Message */}\n          {isProcessingResults && (\n            <div className=\"completion-message\">\n              <h2>Processing Investigation Results</h2>\n              <p>Generating comprehensive report from API data...</p>\n              <div className=\"loading-spinner\"></div>\n            </div>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default OpenSourceInvestigation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}