{"ast":null,"code":"// API service with fallback to mock data\nconst API_BASE_URL=process.env.REACT_APP_API_BASE_URL||'https://abn-kyc-backend.orangeground-daffc4e4.westeurope.azurecontainerapps.io';const API_TIMEOUT=parseInt(process.env.REACT_APP_API_TIMEOUT||'10000');const USE_MOCK_FALLBACK=process.env.REACT_APP_USE_MOCK_DATA_FALLBACK==='true';// Mock data as fallback\nconst mockCompanyData={'12345678':{legalName:'Amsterdam Tech Solutions B.V.',address:'Herengracht 123, 1015 BG Amsterdam',kvkNumber:'12345678',legalForm:'Besloten Vennootschap (B.V.)',foundingDate:'15-03-2018',status:'Active',sbiCode:'62010',sbiDescription:'Computer programming activities',directors:['J.M. van der Berg','S.A. de Vries']},'23456789':{legalName:'Green Garden Services',address:'Parkstraat 45, 2011 ML Haarlem',kvkNumber:'23456789',legalForm:'Eenmanszaak',foundingDate:'22-06-2020',status:'Active',sbiCode:'81300',sbiDescription:'Landscape service activities',directors:['P.J. Janssen']},'34567890':{legalName:'Rotterdam Logistics Group',address:'Maasboulevard 100, 3063 NS Rotterdam',kvkNumber:'34567890',legalForm:'Besloten Vennootschap (B.V.)',foundingDate:'08-11-2016',status:'Active',sbiCode:'52291',sbiDescription:'Forwarding agencies, ship brokers, etc.',directors:['M.R. Bakker','L.H. Smit','A.C. van Dijk']}};const mockCompanyList=[{kvkNumber:'12345678',companyName:'Amsterdam Tech Solutions B.V.',date:'2024-01-15',category:'KYC',urgency:'High',status:'New',actions:'Investigation Required'},{kvkNumber:'23456789',companyName:'Green Garden Services',date:'2024-01-14',category:'KYC',urgency:'Medium',status:'In Progress',actions:'Investigation Required'},{kvkNumber:'34567890',companyName:'Rotterdam Logistics Group',date:'2024-01-13',category:'KYC',urgency:'Low',status:'Pending Information',actions:'Investigation Required'}];class APIService{shouldUseMockFallback(){return USE_MOCK_FALLBACK;}async makeRequest(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const controller=new AbortController();const timeoutId=setTimeout(()=>controller.abort(),API_TIMEOUT);const response=await fetch(`${API_BASE_URL}${endpoint}`,{headers:{'Content-Type':'application/json',...options.headers},signal:controller.signal,...options});clearTimeout(timeoutId);if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}return await response.json();}catch(error){console.warn(`API request failed for ${endpoint}:`,error);throw error;}}async healthCheck(){try{return await this.makeRequest('/health');}catch(error){console.warn('Health check failed, API may be unavailable');return{status:'unavailable',version:'1.0.0',companies_loaded:0,timestamp:new Date().toISOString()};}}async getCompanies(){try{const response=await this.makeRequest('/companies');// Transform API response to match our interface\nconst companies=response.companies.map((company,index)=>{var _company$kvk_number;// Assign priority based on position: first 2 = High, middle 6 = Medium, last 2 = Low\nlet urgency='Medium';if(index<2){urgency='High';}else if(index>=response.companies.length-2){urgency='Low';}return{kvkNumber:((_company$kvk_number=company.kvk_number)===null||_company$kvk_number===void 0?void 0:_company$kvk_number.toString())||'Unknown',companyName:company.legal_entity_name||company.legal_name||'Unknown Company',date:company.founding_date||new Date().toISOString().split('T')[0],category:'KYC',urgency:urgency,status:company.status||'New',actions:'Investigation Required'};});return companies;}catch(error){console.warn('Failed to fetch companies from API, using mock data:',error);return mockCompanyList;}}async getCompanyDetails(kvkNumber){try{var _companyData$kvk_numb;const response=await this.makeRequest('/companyDetails/',{method:'POST',body:JSON.stringify({kvk_number:kvkNumber})});// Transform API response to match our interface\nconst companyData=response.company_data||response;const uboData=response.ubo_data||[];// Extract directors from UBO data\nconst directors=uboData.map(ubo=>ubo['UBO name 1']||ubo['UBO name 2']||ubo['UBO name 3']||'Unknown').filter(name=>name!=='Unknown');const companyInfo={legalName:companyData.legal_entity_name||'Unknown Company',address:companyData.registered_address||'Address not available',kvkNumber:((_companyData$kvk_numb=companyData.kvk_number)===null||_companyData$kvk_numb===void 0?void 0:_companyData$kvk_numb.toString())||kvkNumber,legalForm:companyData.legal_form||'Unknown',foundingDate:companyData.founding_date||'Unknown',status:companyData.status||'Active',sbiCode:companyData.sbi_code||'Unknown',sbiDescription:companyData.sbi_description||'Unknown',directors:directors.length>0?directors:['No directors information available']};return companyInfo;}catch(error){console.warn(`Failed to fetch company details for ${kvkNumber} from API, using mock data:`,error);// Return mock data or default company info\nif(mockCompanyData[kvkNumber]){return mockCompanyData[kvkNumber];}return{legalName:'Sample Company B.V.',address:'Business Street 1, 1000 AB Amsterdam',kvkNumber:kvkNumber,legalForm:'Besloten Vennootschap (B.V.)',foundingDate:'01-01-2020',status:'Active',sbiCode:'70221',sbiDescription:'Business and other management consultancy activities',directors:['John Doe','Jane Smith']};}}async processKYC(request){try{const response=await this.makeRequest('/processkyc',{method:'POST',body:JSON.stringify(request)});return response;}catch(error){console.warn('Failed to process KYC from API, returning mock response:',error);// Return mock KYC processing result\nreturn{status:'completed',company_name:request.company_name,risk_score:Math.floor(Math.random()*100),findings:['Company website appears legitimate','No negative news found in recent searches','Social media presence is consistent with business activities'],recommendations:['Proceed with standard onboarding process','Request additional documentation for verification'],processed_at:new Date().toISOString()};}}async getRoot(){try{return await this.makeRequest('/');}catch(error){console.warn('Failed to fetch root endpoint:',error);return{message:'API unavailable - using offline mode',version:'1.0.0',docs_url:'/docs',health_url:'/health'};}}}export const apiService=new APIService();","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_BASE_URL","API_TIMEOUT","parseInt","REACT_APP_API_TIMEOUT","USE_MOCK_FALLBACK","REACT_APP_USE_MOCK_DATA_FALLBACK","mockCompanyData","legalName","address","kvkNumber","legalForm","foundingDate","status","sbiCode","sbiDescription","directors","mockCompanyList","companyName","date","category","urgency","actions","APIService","shouldUseMockFallback","makeRequest","endpoint","options","arguments","length","undefined","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","headers","signal","clearTimeout","ok","Error","json","error","console","warn","healthCheck","version","companies_loaded","timestamp","Date","toISOString","getCompanies","companies","map","company","index","_company$kvk_number","kvk_number","toString","legal_entity_name","legal_name","founding_date","split","getCompanyDetails","_companyData$kvk_numb","method","body","JSON","stringify","companyData","company_data","uboData","ubo_data","ubo","filter","name","companyInfo","registered_address","legal_form","sbi_code","sbi_description","processKYC","request","company_name","risk_score","Math","floor","random","findings","recommendations","processed_at","getRoot","message","docs_url","health_url","apiService"],"sources":["/home/jzorraquingimeno/dashboard-frontend/src/services/api.ts"],"sourcesContent":["// API service with fallback to mock data\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'https://abn-kyc-backend.orangeground-daffc4e4.westeurope.azurecontainerapps.io';\nconst API_TIMEOUT = parseInt(process.env.REACT_APP_API_TIMEOUT || '10000');\nconst USE_MOCK_FALLBACK = process.env.REACT_APP_USE_MOCK_DATA_FALLBACK === 'true';\n\nexport interface CompanyInfo {\n  legalName: string;\n  address: string;\n  kvkNumber: string;\n  legalForm: string;\n  foundingDate: string;\n  status: string;\n  sbiCode: string;\n  sbiDescription: string;\n  directors: string[];\n}\n\nexport interface CompanyListItem {\n  kvkNumber: string;\n  companyName: string;\n  date: string;\n  category: string;\n  urgency: string;\n  status: string;\n  actions: string;\n}\n\nexport interface ProcessKYCRequest {\n  company_name: string;\n  home_url: string;\n  about_url: string;\n}\n\n// Mock data as fallback\nconst mockCompanyData: { [key: string]: CompanyInfo } = {\n  '12345678': {\n    legalName: 'Amsterdam Tech Solutions B.V.',\n    address: 'Herengracht 123, 1015 BG Amsterdam',\n    kvkNumber: '12345678',\n    legalForm: 'Besloten Vennootschap (B.V.)',\n    foundingDate: '15-03-2018',\n    status: 'Active',\n    sbiCode: '62010',\n    sbiDescription: 'Computer programming activities',\n    directors: ['J.M. van der Berg', 'S.A. de Vries']\n  },\n  '23456789': {\n    legalName: 'Green Garden Services',\n    address: 'Parkstraat 45, 2011 ML Haarlem',\n    kvkNumber: '23456789',\n    legalForm: 'Eenmanszaak',\n    foundingDate: '22-06-2020',\n    status: 'Active',\n    sbiCode: '81300',\n    sbiDescription: 'Landscape service activities',\n    directors: ['P.J. Janssen']\n  },\n  '34567890': {\n    legalName: 'Rotterdam Logistics Group',\n    address: 'Maasboulevard 100, 3063 NS Rotterdam',\n    kvkNumber: '34567890',\n    legalForm: 'Besloten Vennootschap (B.V.)',\n    foundingDate: '08-11-2016',\n    status: 'Active',\n    sbiCode: '52291',\n    sbiDescription: 'Forwarding agencies, ship brokers, etc.',\n    directors: ['M.R. Bakker', 'L.H. Smit', 'A.C. van Dijk']\n  }\n};\n\nconst mockCompanyList: CompanyListItem[] = [\n  {\n    kvkNumber: '12345678',\n    companyName: 'Amsterdam Tech Solutions B.V.',\n    date: '2024-01-15',\n    category: 'KYC',\n    urgency: 'High',\n    status: 'New',\n    actions: 'Investigation Required'\n  },\n  {\n    kvkNumber: '23456789',\n    companyName: 'Green Garden Services',\n    date: '2024-01-14',\n    category: 'KYC',\n    urgency: 'Medium',\n    status: 'In Progress',\n    actions: 'Investigation Required'\n  },\n  {\n    kvkNumber: '34567890',\n    companyName: 'Rotterdam Logistics Group',\n    date: '2024-01-13',\n    category: 'KYC',\n    urgency: 'Low',\n    status: 'Pending Information',\n    actions: 'Investigation Required'\n  }\n];\n\nclass APIService {\n  private shouldUseMockFallback(): boolean {\n    return USE_MOCK_FALLBACK;\n  }\n\n  private async makeRequest<T>(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise<T> {\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), API_TIMEOUT);\n\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...options.headers,\n        },\n        signal: controller.signal,\n        ...options,\n      });\n\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.warn(`API request failed for ${endpoint}:`, error);\n      throw error;\n    }\n  }\n\n  async healthCheck(): Promise<{ status: string; version: string; companies_loaded: number; timestamp: string }> {\n    try {\n      return await this.makeRequest('/health');\n    } catch (error) {\n      console.warn('Health check failed, API may be unavailable');\n      return {\n        status: 'unavailable',\n        version: '1.0.0',\n        companies_loaded: 0,\n        timestamp: new Date().toISOString()\n      };\n    }\n  }\n\n  async getCompanies(): Promise<CompanyListItem[]> {\n    try {\n      const response = await this.makeRequest<{ companies: any[]; total_count: number }>('/companies');\n      \n      // Transform API response to match our interface\n      const companies = response.companies.map((company: any, index: number) => {\n        // Assign priority based on position: first 2 = High, middle 6 = Medium, last 2 = Low\n        let urgency = 'Medium';\n        if (index < 2) {\n          urgency = 'High';\n        } else if (index >= response.companies.length - 2) {\n          urgency = 'Low';\n        }\n\n        return {\n          kvkNumber: company.kvk_number?.toString() || 'Unknown',\n          companyName: company.legal_entity_name || company.legal_name || 'Unknown Company',\n          date: company.founding_date || new Date().toISOString().split('T')[0],\n          category: 'KYC',\n          urgency: urgency,\n          status: company.status || 'New',\n          actions: 'Investigation Required'\n        };\n      });\n\n      return companies;\n    } catch (error) {\n      console.warn('Failed to fetch companies from API, using mock data:', error);\n      return mockCompanyList;\n    }\n  }\n\n  async getCompanyDetails(kvkNumber: string): Promise<CompanyInfo> {\n    try {\n      const response = await this.makeRequest<any>('/companyDetails/', {\n        method: 'POST',\n        body: JSON.stringify({ kvk_number: kvkNumber }),\n      });\n\n      // Transform API response to match our interface\n      const companyData = response.company_data || response;\n      const uboData = response.ubo_data || [];\n      \n      // Extract directors from UBO data\n      const directors = uboData.map((ubo: any) => \n        ubo['UBO name 1'] || ubo['UBO name 2'] || ubo['UBO name 3'] || 'Unknown'\n      ).filter((name: string) => name !== 'Unknown');\n\n      const companyInfo: CompanyInfo = {\n        legalName: companyData.legal_entity_name || 'Unknown Company',\n        address: companyData.registered_address || 'Address not available',\n        kvkNumber: companyData.kvk_number?.toString() || kvkNumber,\n        legalForm: companyData.legal_form || 'Unknown',\n        foundingDate: companyData.founding_date || 'Unknown',\n        status: companyData.status || 'Active',\n        sbiCode: companyData.sbi_code || 'Unknown',\n        sbiDescription: companyData.sbi_description || 'Unknown',\n        directors: directors.length > 0 ? directors : ['No directors information available']\n      };\n\n      return companyInfo;\n    } catch (error) {\n      console.warn(`Failed to fetch company details for ${kvkNumber} from API, using mock data:`, error);\n      \n      // Return mock data or default company info\n      if (mockCompanyData[kvkNumber]) {\n        return mockCompanyData[kvkNumber];\n      }\n      \n      return {\n        legalName: 'Sample Company B.V.',\n        address: 'Business Street 1, 1000 AB Amsterdam',\n        kvkNumber: kvkNumber,\n        legalForm: 'Besloten Vennootschap (B.V.)',\n        foundingDate: '01-01-2020',\n        status: 'Active',\n        sbiCode: '70221',\n        sbiDescription: 'Business and other management consultancy activities',\n        directors: ['John Doe', 'Jane Smith']\n      };\n    }\n  }\n\n  async processKYC(request: ProcessKYCRequest): Promise<any> {\n    try {\n      const response = await this.makeRequest<any>('/processkyc', {\n        method: 'POST',\n        body: JSON.stringify(request),\n      });\n\n      return response;\n    } catch (error) {\n      console.warn('Failed to process KYC from API, returning mock response:', error);\n      \n      // Return mock KYC processing result\n      return {\n        status: 'completed',\n        company_name: request.company_name,\n        risk_score: Math.floor(Math.random() * 100),\n        findings: [\n          'Company website appears legitimate',\n          'No negative news found in recent searches',\n          'Social media presence is consistent with business activities'\n        ],\n        recommendations: [\n          'Proceed with standard onboarding process',\n          'Request additional documentation for verification'\n        ],\n        processed_at: new Date().toISOString()\n      };\n    }\n  }\n\n  async getRoot(): Promise<{ message: string; version: string; docs_url: string; health_url: string }> {\n    try {\n      return await this.makeRequest('/');\n    } catch (error) {\n      console.warn('Failed to fetch root endpoint:', error);\n      return {\n        message: 'API unavailable - using offline mode',\n        version: '1.0.0',\n        docs_url: '/docs',\n        health_url: '/health'\n      };\n    }\n  }\n}\n\nexport const apiService = new APIService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}