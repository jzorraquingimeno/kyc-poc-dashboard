{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import Header from'./Header';import Sidebar from'./Sidebar';import{apiService}from'../services/api';import'./InvestigationReport.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const InvestigationReport=()=>{var _investigationData$ri;const{kvkNumber}=useParams();const navigate=useNavigate();const[loading,setLoading]=useState(true);const[apiStatus,setApiStatus]=useState('offline');const[investigationData,setInvestigationData]=useState(null);const[companyData,setCompanyData]=useState(null);// Load investigation data from API\nuseEffect(()=>{const loadInvestigationData=async()=>{if(!kvkNumber)return;try{setLoading(true);// First get company details to get the company name\nconst companyInfo=await apiService.getCompanyDetails(kvkNumber);setCompanyData(companyInfo);// Check API health\nconst health=await apiService.healthCheck();setApiStatus(health.status==='healthy'?'online':'offline');// Get investigation results from processKYC\nconst investigationResult=await apiService.processKYC({company_name:companyInfo.legalName,home_url:`https://example.com/${companyInfo.legalName.toLowerCase().replace(/\\s+/g,'-')}`,about_url:`https://example.com/${companyInfo.legalName.toLowerCase().replace(/\\s+/g,'-')}/about`});setInvestigationData(investigationResult);}catch(error){console.error('Failed to load investigation data:',error);setApiStatus('offline');}finally{setLoading(false);}};loadInvestigationData();},[kvkNumber]);const companyName=(companyData===null||companyData===void 0?void 0:companyData.legalName)||'Unknown Company';// Convert API risk assessment to findings format\nconst getFindings=()=>{if(!(investigationData!==null&&investigationData!==void 0&&investigationData.risk_assessment)){console.log('No risk assessment data available:',investigationData);return[];// Return empty array if no data\n}const riskAssessment=investigationData.risk_assessment;const findings=[];console.log('Risk assessment data:',riskAssessment);// Helper function to convert risk score (0-10) to risk level\nconst getRiskLevel=score=>{if(score<=3)return'Low';if(score<=7)return'Medium';return'High';};// Process all risk categories\nconst riskCategories=[{key:'geo_risk',name:'Geographical Risk'},{key:'industry_risk',name:'Industry Risk'},{key:'structure_risk',name:'Structure Risk'},{key:'adverse_media_risk',name:'Adverse Media Risk'},{key:'sanctions_risk',name:'Sanctions Risk'},{key:'pep_risk',name:'PEP Risk'}];riskCategories.forEach(category=>{const riskData=riskAssessment[category.key];if(riskData){findings.push({category:riskData['Risk Category']||category.name,description:riskData.Summary||`${category.name}: ${riskData['Risk Description']||'No information available.'}`,risk:getRiskLevel(riskData['Risk Score']||0)});}});console.log('Generated findings:',findings);return findings;};const findings=getFindings();// Generate risk scores from API data\nconst getRiskScores=()=>{if(!(investigationData!==null&&investigationData!==void 0&&investigationData.risk_assessment)){return[];}const riskAssessment=investigationData.risk_assessment;const scores=[];const riskCategories=[{key:'geo_risk',name:'Geographical Risk',weight:20},{key:'industry_risk',name:'Industry Risk',weight:15},{key:'structure_risk',name:'Structure Risk',weight:25},{key:'adverse_media_risk',name:'Adverse Media Risk',weight:15},{key:'sanctions_risk',name:'Sanctions Risk',weight:15},{key:'pep_risk',name:'PEP Risk',weight:10}];riskCategories.forEach(category=>{const riskData=riskAssessment[category.key];if(riskData){scores.push({category:riskData['Risk Category']||category.name,score:riskData['Risk Score']||0,weight:category.weight});}});return scores;};const riskScores=getRiskScores();// Use final_risk_score from API or calculate if not available\nconst overallScore=(investigationData===null||investigationData===void 0?void 0:(_investigationData$ri=investigationData.risk_assessment)===null||_investigationData$ri===void 0?void 0:_investigationData$ri.final_risk_score)||0;// Generate conclusion based on overall score\nconst getConclusion=()=>{var _investigationData$pu;const riskLevel=overallScore<=3?'LOW RISK':overallScore<=7?'MEDIUM RISK':'HIGH RISK';const companyDescription=investigationData===null||investigationData===void 0?void 0:(_investigationData$pu=investigationData.public_web_data)===null||_investigationData$pu===void 0?void 0:_investigationData$pu.company_description;return`Based on comprehensive open-source investigation, ${companyName} presents a ${riskLevel} profile with a final risk score of ${overallScore}/10. ${companyDescription?companyDescription.substring(0,300)+'...':'No additional company description available.'}`;};const conclusion=loading?'Loading investigation results...':getConclusion();// Extract Evidence Locker from API sources\nconst getEvidenceLocker=()=>{if(!(investigationData!==null&&investigationData!==void 0&&investigationData.risk_assessment))return[];const evidence=[];const riskAssessment=investigationData.risk_assessment;const riskCategories=[{key:'geo_risk',name:'Geographical Risk'},{key:'industry_risk',name:'Industry Risk'},{key:'structure_risk',name:'Structure Risk'},{key:'adverse_media_risk',name:'Adverse Media Risk'},{key:'sanctions_risk',name:'Sanctions Risk'},{key:'pep_risk',name:'PEP Risk'}];riskCategories.forEach(category=>{const riskData=riskAssessment[category.key];if(riskData!==null&&riskData!==void 0&&riskData.Source){const categoryEvidence={category:riskData['Risk Category']||category.name,sources:[]};// Handle different source structures\nif(typeof riskData.Source==='object'){Object.keys(riskData.Source).forEach(sourceType=>{const sourceList=riskData.Source[sourceType];if(Array.isArray(sourceList)){sourceList.forEach(source=>{if(source.title&&source.link){categoryEvidence.sources.push({title:source.title,link:source.link,snippet:source.snippet||'No snippet available'});}});}});}if(categoryEvidence.sources.length>0){evidence.push(categoryEvidence);}}});return evidence;};const evidenceLocker=getEvidenceLocker();// Generate search keywords from company data\nconst getSearchKeywords=()=>{var _investigationData$pu2;if(!companyData&&!investigationData)return[];const keywords=[];if(companyData!==null&&companyData!==void 0&&companyData.legalName){keywords.push(companyData.legalName);// Add variations of company name\nconst nameParts=companyData.legalName.split(' ');if(nameParts.length>1){keywords.push(nameParts.slice(0,-1).join(' '));// Without legal form\n}}if(companyData!==null&&companyData!==void 0&&companyData.sbiDescription){keywords.push(companyData.sbiDescription);}if(investigationData!==null&&investigationData!==void 0&&(_investigationData$pu2=investigationData.public_web_data)!==null&&_investigationData$pu2!==void 0&&_investigationData$pu2.key_activities){keywords.push(investigationData.public_web_data.key_activities);}return keywords.slice(0,5);// Limit to 5 keywords\n};const searchKeywords=getSearchKeywords();return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsxs(\"main\",{className:\"report-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"breadcrumb\",children:[/*#__PURE__*/_jsx(\"span\",{onClick:()=>navigate('/dashboard'),className:\"breadcrumb-link\",children:\"Dashboard\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"span\",{onClick:()=>navigate('/dashboard'),className:\"breadcrumb-link\",children:\"Recent Tickets\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"span\",{onClick:()=>navigate(`/ticket/${kvkNumber}`),className:\"breadcrumb-link\",children:companyName}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-current\",children:\"Investigation Report\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"report-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"report-title-section\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"OPEN-SOURCE INVESTIGATION REPORT\"}),!loading&&/*#__PURE__*/_jsx(\"div\",{className:`api-status-indicator ${apiStatus}`,children:apiStatus==='online'?'LIVE DATA':'Offline Mode'})]}),/*#__PURE__*/_jsx(\"h2\",{children:loading?'Loading Company...':companyName}),/*#__PURE__*/_jsxs(\"div\",{className:\"report-meta\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"KVK: \",kvkNumber]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Generated: \",new Date().toLocaleDateString()]})]})]}),loading?/*#__PURE__*/_jsxs(\"div\",{className:\"loading-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Processing investigation data...\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"report-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Search Keywords Used\"}),/*#__PURE__*/_jsx(\"div\",{className:\"keywords-container\",children:searchKeywords.map((keyword,index)=>/*#__PURE__*/_jsx(\"span\",{className:\"keyword-tag\",children:keyword},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"report-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"FINDINGS\"}),/*#__PURE__*/_jsx(\"div\",{className:\"findings-grid\",children:findings.length>0?findings.map((finding,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"finding-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"finding-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:finding.category}),/*#__PURE__*/_jsx(\"span\",{className:`risk-badge ${finding.risk.toLowerCase()}`,children:finding.risk})]}),/*#__PURE__*/_jsx(\"p\",{children:finding.description})]},index)):/*#__PURE__*/_jsxs(\"div\",{className:\"no-findings\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No findings available. Check browser console for API response details.\"}),investigationData&&/*#__PURE__*/_jsxs(\"details\",{style:{marginTop:'1rem',padding:'1rem',background:'#f5f5f5',borderRadius:'8px'},children:[/*#__PURE__*/_jsx(\"summary\",{children:\"Debug: Raw API Response\"}),/*#__PURE__*/_jsx(\"pre\",{style:{fontSize:'12px',overflow:'auto',maxHeight:'300px'},children:JSON.stringify(investigationData,null,2)})]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"report-section conclusion-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"CONCLUSION\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"conclusion-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"score-display\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"score-circle\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"score-number\",children:overallScore}),/*#__PURE__*/_jsx(\"span\",{className:\"score-max\",children:\"/10\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"score-label\",children:/*#__PURE__*/_jsx(\"span\",{className:`risk-level ${overallScore<=3?'low':overallScore<=7?'medium':'high'}`,children:overallScore<=3?'LOW RISK':overallScore<=7?'MEDIUM RISK':'HIGH RISK'})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"conclusion-text\",children:/*#__PURE__*/_jsx(\"p\",{children:conclusion})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"report-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Risk Score Breakdown\"}),/*#__PURE__*/_jsx(\"div\",{className:\"score-breakdown\",children:riskScores.map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"score-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"score-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"score-category\",children:item.category}),/*#__PURE__*/_jsxs(\"span\",{className:\"score-weight\",children:[\"Weight: \",item.weight,\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"score-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"score-fill\",style:{width:`${item.score/10*100}%`}})}),/*#__PURE__*/_jsxs(\"span\",{className:\"score-value\",children:[item.score,\"/10\"]})]},index))})]}),evidenceLocker.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"report-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Evidence Locker\"}),/*#__PURE__*/_jsx(\"div\",{className:\"evidence-categories\",children:evidenceLocker.map((category,categoryIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"evidence-category\",children:[/*#__PURE__*/_jsx(\"h4\",{children:category.category}),/*#__PURE__*/_jsx(\"div\",{className:\"evidence-sources\",children:category.sources.map((source,sourceIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"evidence-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"evidence-header\",children:/*#__PURE__*/_jsx(\"a\",{href:source.link,target:\"_blank\",rel:\"noopener noreferrer\",className:\"evidence-link\",children:source.title})}),/*#__PURE__*/_jsx(\"div\",{className:\"evidence-snippet\",children:source.snippet}),/*#__PURE__*/_jsx(\"div\",{className:\"evidence-url\",children:/*#__PURE__*/_jsx(\"small\",{children:source.link})})]},sourceIndex))})]},categoryIndex))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"report-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-btn primary\",onClick:()=>window.print(),children:\"Download Report\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-btn secondary\",onClick:()=>navigate(`/ticket/${kvkNumber}`),children:\"Back to Ticket\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-btn secondary\",onClick:()=>navigate('/dashboard'),children:\"Back to Dashboard\"})]})]})]})]})]});};export default InvestigationReport;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Header","Sidebar","apiService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","InvestigationReport","_investigationData$ri","kvkNumber","navigate","loading","setLoading","apiStatus","setApiStatus","investigationData","setInvestigationData","companyData","setCompanyData","loadInvestigationData","companyInfo","getCompanyDetails","health","healthCheck","status","investigationResult","processKYC","company_name","legalName","home_url","toLowerCase","replace","about_url","error","console","companyName","getFindings","risk_assessment","log","riskAssessment","findings","getRiskLevel","score","riskCategories","key","name","forEach","category","riskData","push","description","Summary","risk","getRiskScores","scores","weight","riskScores","overallScore","final_risk_score","getConclusion","_investigationData$pu","riskLevel","companyDescription","public_web_data","company_description","substring","conclusion","getEvidenceLocker","evidence","Source","categoryEvidence","sources","Object","keys","sourceType","sourceList","Array","isArray","source","title","link","snippet","length","evidenceLocker","getSearchKeywords","_investigationData$pu2","keywords","nameParts","split","slice","join","sbiDescription","key_activities","searchKeywords","className","children","onClick","Date","toLocaleDateString","map","keyword","index","finding","style","marginTop","padding","background","borderRadius","fontSize","overflow","maxHeight","JSON","stringify","item","width","categoryIndex","sourceIndex","href","target","rel","window","print"],"sources":["/home/jzorraquingimeno/dashboard-frontend/src/components/InvestigationReport.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport { apiService } from '../services/api';\nimport './InvestigationReport.css';\n\ninterface Finding {\n  category: string;\n  description: string;\n  risk: 'Low' | 'Medium' | 'High';\n}\n\ninterface RiskScore {\n  category: string;\n  score: number;\n  weight: number;\n}\n\nconst InvestigationReport: React.FC = () => {\n  const { kvkNumber } = useParams<{ kvkNumber: string }>();\n  const navigate = useNavigate();\n  \n  const [loading, setLoading] = useState(true);\n  const [apiStatus, setApiStatus] = useState<'online' | 'offline'>('offline');\n  const [investigationData, setInvestigationData] = useState<any>(null);\n  const [companyData, setCompanyData] = useState<any>(null);\n\n  // Load investigation data from API\n  useEffect(() => {\n    const loadInvestigationData = async () => {\n      if (!kvkNumber) return;\n\n      try {\n        setLoading(true);\n        \n        // First get company details to get the company name\n        const companyInfo = await apiService.getCompanyDetails(kvkNumber);\n        setCompanyData(companyInfo);\n        \n        // Check API health\n        const health = await apiService.healthCheck();\n        setApiStatus(health.status === 'healthy' ? 'online' : 'offline');\n\n        // Get investigation results from processKYC\n        const investigationResult = await apiService.processKYC({\n          company_name: companyInfo.legalName,\n          home_url: `https://example.com/${companyInfo.legalName.toLowerCase().replace(/\\s+/g, '-')}`,\n          about_url: `https://example.com/${companyInfo.legalName.toLowerCase().replace(/\\s+/g, '-')}/about`\n        });\n\n        setInvestigationData(investigationResult);\n      } catch (error) {\n        console.error('Failed to load investigation data:', error);\n        setApiStatus('offline');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadInvestigationData();\n  }, [kvkNumber]);\n\n  const companyName = companyData?.legalName || 'Unknown Company';\n\n  // Convert API risk assessment to findings format\n  const getFindings = (): Finding[] => {\n    if (!investigationData?.risk_assessment) {\n      console.log('No risk assessment data available:', investigationData);\n      return []; // Return empty array if no data\n    }\n\n    const riskAssessment = investigationData.risk_assessment;\n    const findings: Finding[] = [];\n    console.log('Risk assessment data:', riskAssessment);\n\n    // Helper function to convert risk score (0-10) to risk level\n    const getRiskLevel = (score: number): 'Low' | 'Medium' | 'High' => {\n      if (score <= 3) return 'Low';\n      if (score <= 7) return 'Medium';\n      return 'High';\n    };\n\n    // Process all risk categories\n    const riskCategories = [\n      { key: 'geo_risk', name: 'Geographical Risk' },\n      { key: 'industry_risk', name: 'Industry Risk' },\n      { key: 'structure_risk', name: 'Structure Risk' },\n      { key: 'adverse_media_risk', name: 'Adverse Media Risk' },\n      { key: 'sanctions_risk', name: 'Sanctions Risk' },\n      { key: 'pep_risk', name: 'PEP Risk' }\n    ];\n\n    riskCategories.forEach(category => {\n      const riskData = riskAssessment[category.key];\n      if (riskData) {\n        findings.push({\n          category: riskData['Risk Category'] || category.name,\n          description: riskData.Summary || `${category.name}: ${riskData['Risk Description'] || 'No information available.'}`,\n          risk: getRiskLevel(riskData['Risk Score'] || 0)\n        });\n      }\n    });\n\n    console.log('Generated findings:', findings);\n    return findings;\n  };\n\n  const findings = getFindings();\n\n  // Generate risk scores from API data\n  const getRiskScores = (): RiskScore[] => {\n    if (!investigationData?.risk_assessment) {\n      return [];\n    }\n\n    const riskAssessment = investigationData.risk_assessment;\n    const scores: RiskScore[] = [];\n\n    const riskCategories = [\n      { key: 'geo_risk', name: 'Geographical Risk', weight: 20 },\n      { key: 'industry_risk', name: 'Industry Risk', weight: 15 },\n      { key: 'structure_risk', name: 'Structure Risk', weight: 25 },\n      { key: 'adverse_media_risk', name: 'Adverse Media Risk', weight: 15 },\n      { key: 'sanctions_risk', name: 'Sanctions Risk', weight: 15 },\n      { key: 'pep_risk', name: 'PEP Risk', weight: 10 }\n    ];\n\n    riskCategories.forEach(category => {\n      const riskData = riskAssessment[category.key];\n      if (riskData) {\n        scores.push({ \n          category: riskData['Risk Category'] || category.name, \n          score: riskData['Risk Score'] || 0, \n          weight: category.weight \n        });\n      }\n    });\n\n    return scores;\n  };\n\n  const riskScores = getRiskScores();\n\n  // Use final_risk_score from API or calculate if not available\n  const overallScore = investigationData?.risk_assessment?.final_risk_score || 0;\n\n  // Generate conclusion based on overall score\n  const getConclusion = (): string => {\n    const riskLevel = overallScore <= 3 ? 'LOW RISK' : overallScore <= 7 ? 'MEDIUM RISK' : 'HIGH RISK';\n    const companyDescription = investigationData?.public_web_data?.company_description;\n    return `Based on comprehensive open-source investigation, ${companyName} presents a ${riskLevel} profile with a final risk score of ${overallScore}/10. ${companyDescription ? companyDescription.substring(0, 300) + '...' : 'No additional company description available.'}`;\n  };\n\n  const conclusion = loading ? 'Loading investigation results...' : getConclusion();\n\n  // Extract Evidence Locker from API sources\n  const getEvidenceLocker = () => {\n    if (!investigationData?.risk_assessment) return [];\n    \n    const evidence: Array<{category: string, sources: Array<{title: string, link: string, snippet: string}>}> = [];\n    const riskAssessment = investigationData.risk_assessment;\n\n    const riskCategories = [\n      { key: 'geo_risk', name: 'Geographical Risk' },\n      { key: 'industry_risk', name: 'Industry Risk' },\n      { key: 'structure_risk', name: 'Structure Risk' },\n      { key: 'adverse_media_risk', name: 'Adverse Media Risk' },\n      { key: 'sanctions_risk', name: 'Sanctions Risk' },\n      { key: 'pep_risk', name: 'PEP Risk' }\n    ];\n\n    riskCategories.forEach(category => {\n      const riskData = riskAssessment[category.key];\n      if (riskData?.Source) {\n        const categoryEvidence = {\n          category: riskData['Risk Category'] || category.name,\n          sources: [] as Array<{title: string, link: string, snippet: string}>\n        };\n\n        // Handle different source structures\n        if (typeof riskData.Source === 'object') {\n          Object.keys(riskData.Source).forEach(sourceType => {\n            const sourceList = riskData.Source[sourceType];\n            if (Array.isArray(sourceList)) {\n              sourceList.forEach((source: any) => {\n                if (source.title && source.link) {\n                  categoryEvidence.sources.push({\n                    title: source.title,\n                    link: source.link,\n                    snippet: source.snippet || 'No snippet available'\n                  });\n                }\n              });\n            }\n          });\n        }\n\n        if (categoryEvidence.sources.length > 0) {\n          evidence.push(categoryEvidence);\n        }\n      }\n    });\n\n    return evidence;\n  };\n\n  const evidenceLocker = getEvidenceLocker();\n\n  // Generate search keywords from company data\n  const getSearchKeywords = (): string[] => {\n    if (!companyData && !investigationData) return [];\n    \n    const keywords: string[] = [];\n    \n    if (companyData?.legalName) {\n      keywords.push(companyData.legalName);\n      // Add variations of company name\n      const nameParts = companyData.legalName.split(' ');\n      if (nameParts.length > 1) {\n        keywords.push(nameParts.slice(0, -1).join(' ')); // Without legal form\n      }\n    }\n    \n    if (companyData?.sbiDescription) {\n      keywords.push(companyData.sbiDescription);\n    }\n    \n    if (investigationData?.public_web_data?.key_activities) {\n      keywords.push(investigationData.public_web_data.key_activities);\n    }\n    \n    return keywords.slice(0, 5); // Limit to 5 keywords\n  };\n\n  const searchKeywords = getSearchKeywords();\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"app-container\">\n        <Sidebar />\n        <main className=\"report-main\">\n          {/* Breadcrumb Navigation */}\n          <div className=\"breadcrumb\">\n            <span onClick={() => navigate('/dashboard')} className=\"breadcrumb-link\">\n              Dashboard\n            </span>\n            <span className=\"breadcrumb-separator\">›</span>\n            <span onClick={() => navigate('/dashboard')} className=\"breadcrumb-link\">\n              Recent Tickets\n            </span>\n            <span className=\"breadcrumb-separator\">›</span>\n            <span onClick={() => navigate(`/ticket/${kvkNumber}`)} className=\"breadcrumb-link\">\n              {companyName}\n            </span>\n            <span className=\"breadcrumb-separator\">›</span>\n            <span className=\"breadcrumb-current\">\n              Investigation Report\n            </span>\n          </div>\n\n          {/* Report Header */}\n          <div className=\"report-header\">\n            <div className=\"report-title-section\">\n              <h1>OPEN-SOURCE INVESTIGATION REPORT</h1>\n              {!loading && (\n                <div className={`api-status-indicator ${apiStatus}`}>\n                  {apiStatus === 'online' ? 'LIVE DATA' : 'Offline Mode'}\n                </div>\n              )}\n            </div>\n            <h2>{loading ? 'Loading Company...' : companyName}</h2>\n            <div className=\"report-meta\">\n              <span>KVK: {kvkNumber}</span>\n              <span>Generated: {new Date().toLocaleDateString()}</span>\n            </div>\n          </div>\n\n          {loading ? (\n            <div className=\"loading-content\">\n              <div className=\"loading-spinner\"></div>\n              <p>Processing investigation data...</p>\n            </div>\n          ) : (\n            <>\n              {/* Keywords Section */}\n              <div className=\"report-section\">\n                <h3>Search Keywords Used</h3>\n                <div className=\"keywords-container\">\n                  {searchKeywords.map((keyword, index) => (\n                    <span key={index} className=\"keyword-tag\">\n                      {keyword}\n                    </span>\n                  ))}\n                </div>\n              </div>\n\n          {/* Findings Section */}\n          <div className=\"report-section\">\n            <h3>FINDINGS</h3>\n            <div className=\"findings-grid\">\n              {findings.length > 0 ? (\n                findings.map((finding, index) => (\n                  <div key={index} className=\"finding-item\">\n                    <div className=\"finding-header\">\n                      <h4>{finding.category}</h4>\n                      <span className={`risk-badge ${finding.risk.toLowerCase()}`}>\n                        {finding.risk}\n                      </span>\n                    </div>\n                    <p>{finding.description}</p>\n                  </div>\n                ))\n              ) : (\n                <div className=\"no-findings\">\n                  <p>No findings available. Check browser console for API response details.</p>\n                  {investigationData && (\n                    <details style={{ marginTop: '1rem', padding: '1rem', background: '#f5f5f5', borderRadius: '8px' }}>\n                      <summary>Debug: Raw API Response</summary>\n                      <pre style={{ fontSize: '12px', overflow: 'auto', maxHeight: '300px' }}>\n                        {JSON.stringify(investigationData, null, 2)}\n                      </pre>\n                    </details>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Conclusion Section */}\n          <div className=\"report-section conclusion-section\">\n            <h3>CONCLUSION</h3>\n            <div className=\"conclusion-content\">\n              <div className=\"score-display\">\n                <div className=\"score-circle\">\n                  <span className=\"score-number\">{overallScore}</span>\n                  <span className=\"score-max\">/10</span>\n                </div>\n                <div className=\"score-label\">\n                  <span className={`risk-level ${overallScore <= 3 ? 'low' : overallScore <= 7 ? 'medium' : 'high'}`}>\n                    {overallScore <= 3 ? 'LOW RISK' : overallScore <= 7 ? 'MEDIUM RISK' : 'HIGH RISK'}\n                  </span>\n                </div>\n              </div>\n              <div className=\"conclusion-text\">\n                <p>{conclusion}</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Risk Score Breakdown */}\n          <div className=\"report-section\">\n            <h3>Risk Score Breakdown</h3>\n            <div className=\"score-breakdown\">\n              {riskScores.map((item, index) => (\n                <div key={index} className=\"score-item\">\n                  <div className=\"score-info\">\n                    <span className=\"score-category\">{item.category}</span>\n                    <span className=\"score-weight\">Weight: {item.weight}%</span>\n                  </div>\n                  <div className=\"score-bar\">\n                    <div \n                      className=\"score-fill\"\n                      style={{ width: `${(item.score / 10) * 100}%` }}\n                    ></div>\n                  </div>\n                  <span className=\"score-value\">{item.score}/10</span>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Evidence Locker */}\n          {evidenceLocker.length > 0 && (\n            <div className=\"report-section\">\n              <h3>Evidence Locker</h3>\n              <div className=\"evidence-categories\">\n                {evidenceLocker.map((category, categoryIndex) => (\n                  <div key={categoryIndex} className=\"evidence-category\">\n                    <h4>{category.category}</h4>\n                    <div className=\"evidence-sources\">\n                      {category.sources.map((source, sourceIndex) => (\n                        <div key={sourceIndex} className=\"evidence-item\">\n                          <div className=\"evidence-header\">\n                            <a \n                              href={source.link} \n                              target=\"_blank\" \n                              rel=\"noopener noreferrer\"\n                              className=\"evidence-link\"\n                            >\n                              {source.title}\n                            </a>\n                          </div>\n                          <div className=\"evidence-snippet\">\n                            {source.snippet}\n                          </div>\n                          <div className=\"evidence-url\">\n                            <small>{source.link}</small>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n              {/* Action Buttons */}\n              <div className=\"report-actions\">\n                <button \n                  className=\"action-btn primary\"\n                  onClick={() => window.print()}\n                >\n                  Download Report\n                </button>\n                <button \n                  className=\"action-btn secondary\"\n                  onClick={() => navigate(`/ticket/${kvkNumber}`)}\n                >\n                  Back to Ticket\n                </button>\n                <button \n                  className=\"action-btn secondary\"\n                  onClick={() => navigate('/dashboard')}\n                >\n                  Back to Dashboard\n                </button>\n              </div>\n            </>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default InvestigationReport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}