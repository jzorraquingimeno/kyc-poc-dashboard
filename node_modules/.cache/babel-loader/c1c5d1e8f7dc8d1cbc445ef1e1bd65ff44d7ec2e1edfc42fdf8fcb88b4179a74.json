{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import Header from'./Header';import Sidebar from'./Sidebar';import{apiService}from'../services/api';import'./InvestigationReport.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const InvestigationReport=()=>{var _investigationData$ri;const{kvkNumber}=useParams();const navigate=useNavigate();const[loading,setLoading]=useState(true);const[apiStatus,setApiStatus]=useState('offline');const[investigationData,setInvestigationData]=useState(null);const[companyData,setCompanyData]=useState(null);// Load investigation data from API\nuseEffect(()=>{const loadInvestigationData=async()=>{if(!kvkNumber)return;try{setLoading(true);// First get company details to get the company name\nconst companyInfo=await apiService.getCompanyDetails(kvkNumber);setCompanyData(companyInfo);// Check API health\nconst health=await apiService.healthCheck();setApiStatus(health.status==='healthy'?'online':'offline');// Get investigation results from processKYC\nconst investigationResult=await apiService.processKYC({company_name:companyInfo.legalName,home_url:`https://example.com/${companyInfo.legalName.toLowerCase().replace(/\\s+/g,'-')}`,about_url:`https://example.com/${companyInfo.legalName.toLowerCase().replace(/\\s+/g,'-')}/about`});setInvestigationData(investigationResult);}catch(error){console.error('Failed to load investigation data:',error);setApiStatus('offline');}finally{setLoading(false);}};loadInvestigationData();},[kvkNumber]);const companyName=(companyData===null||companyData===void 0?void 0:companyData.legalName)||'Unknown Company';// Generate structured risk findings for the 6 specific risk categories\nconst getFindings=()=>{console.log('Investigation data structure:',investigationData);// Helper function to convert risk score to risk level\nconst getRiskLevel=score=>{if(score<=3)return'Low';if(score<=7)return'Medium';return'High';};// Define the 6 risk categories with detailed information\nconst riskCategories=[{key:'geo_risk',name:'Geographical Risk',description:'Assessment of risks associated with the company\\'s geographical location and operational jurisdictions'},{key:'industry_risk',name:'Industry Risk',description:'Evaluation of sector-specific risks and regulatory requirements for the company\\'s business activities'},{key:'structure_risk',name:'Structure Risk',description:'Analysis of corporate structure, ownership transparency, and organizational complexity'},{key:'adverse_media_risk',name:'Adverse Media Risk',description:'Investigation of negative media coverage, public controversies, and reputational concerns'},{key:'sanctions_risk',name:'Sanctions Risk',description:'Screening against international sanctions lists and restricted party databases'},{key:'pep_risk',name:'Politically Exposed Person (PEP) Risk',description:'Assessment of connections to politically exposed persons and government officials'}];const findings=[];// Try detailed risk assessment structure first\nif(investigationData!==null&&investigationData!==void 0&&investigationData.risk_assessment){const riskAssessment=investigationData.risk_assessment;console.log('Using detailed risk assessment data:',riskAssessment);riskCategories.forEach(category=>{const riskData=riskAssessment[category.key];if(riskData){const score=riskData['Risk Score']||0;findings.push({category:riskData['Risk Category']||category.name,description:category.description,score:score,risk:getRiskLevel(score),explanation:riskData.Summary||riskData['Risk Description']||`${category.name} assessment completed with score ${score}/10.`});}});}// Fallback: Generate structured findings from simple API response\nelse if(investigationData){console.log('Generating structured findings from simple API response');// Use overall risk score and available findings to generate structured assessment\nconst baseScore=investigationData.risk_score?Math.round(investigationData.risk_score/10):5;const apiFindings=investigationData.findings||[];// Generate intelligent risk assessments for each category\nriskCategories.forEach((category,index)=>{let score=baseScore;let explanation='';// Adjust scores and explanations based on category and available data\nswitch(category.key){case'geo_risk':score=Math.max(1,baseScore-1);// Generally lower for established companies\nexplanation=`Geographical risk assessment based on company location and operational jurisdictions. `;if(companyData!==null&&companyData!==void 0&&companyData.address){explanation+=`Company is registered in ${companyData.address}. `;}explanation+=`Score reflects regional regulatory environment and political stability.`;break;case'industry_risk':score=baseScore;explanation=`Industry-specific risk evaluation for the company's business sector. `;if(companyData!==null&&companyData!==void 0&&companyData.sbiDescription){explanation+=`Operating in ${companyData.sbiDescription} sector. `;}explanation+=`Assessment considers regulatory requirements and sector-specific compliance obligations.`;break;case'structure_risk':score=Math.max(2,baseScore-1);explanation=`Corporate structure analysis based on ownership transparency and organizational complexity. `;if(companyData!==null&&companyData!==void 0&&companyData.legalForm){explanation+=`Legal form: ${companyData.legalForm}. `;}explanation+=`Score reflects transparency of corporate structure and beneficial ownership.`;break;case'adverse_media_risk':// Check if findings mention media or reputation\nconst hasMediaFindings=apiFindings.some(f=>f.toLowerCase().includes('media')||f.toLowerCase().includes('news')||f.toLowerCase().includes('negative'));score=hasMediaFindings?Math.min(8,baseScore+2):Math.max(1,baseScore-2);explanation=`Media screening and reputational risk assessment. `;if(hasMediaFindings){explanation+=`Investigation identified media coverage requiring attention. `;}else{explanation+=`No significant adverse media coverage identified in current screening. `;}explanation+=`Score based on public information and news analysis.`;break;case'sanctions_risk':score=Math.max(1,baseScore-2);// Generally low for legitimate companies\nexplanation=`Sanctions screening against international restricted party lists. `;explanation+=`Company and associated parties checked against OFAC, EU, UN sanctions databases. `;explanation+=`Low score indicates no matches found in current screening.`;break;case'pep_risk':score=Math.max(1,baseScore-1);explanation=`Politically Exposed Person (PEP) risk assessment. `;if(companyData!==null&&companyData!==void 0&&companyData.directors&&companyData.directors.length>0){explanation+=`Screening of ${companyData.directors.length} associated individual(s). `;}explanation+=`Assessment covers direct and indirect connections to government officials and politically exposed persons.`;break;}findings.push({category:category.name,description:category.description,score:Math.min(10,Math.max(0,score)),// Ensure 0-10 range\nrisk:getRiskLevel(score),explanation:explanation});});}// Ensure we always have the 6 risk categories, even with minimal data\nif(findings.length===0){console.log('Creating default risk structure');riskCategories.forEach(category=>{findings.push({category:category.name,description:category.description,score:3,// Default medium-low score\nrisk:'Low',explanation:`${category.name} assessment pending. Preliminary evaluation suggests low risk profile based on available information.`});});}console.log('Generated structured findings:',findings);return findings;};const findings=getFindings();// Generate risk scores from API data with fallback\nconst getRiskScores=()=>{const scores=[];// Try detailed risk assessment structure first\nif(investigationData!==null&&investigationData!==void 0&&investigationData.risk_assessment){const riskAssessment=investigationData.risk_assessment;const riskCategories=[{key:'geo_risk',name:'Geographical Risk',weight:20},{key:'industry_risk',name:'Industry Risk',weight:15},{key:'structure_risk',name:'Structure Risk',weight:25},{key:'adverse_media_risk',name:'Adverse Media Risk',weight:15},{key:'sanctions_risk',name:'Sanctions Risk',weight:15},{key:'pep_risk',name:'PEP Risk',weight:10}];riskCategories.forEach(category=>{const riskData=riskAssessment[category.key];if(riskData){scores.push({category:riskData['Risk Category']||category.name,score:riskData['Risk Score']||0,weight:category.weight});}});}// Fallback: create a single overall risk score\nelse if((investigationData===null||investigationData===void 0?void 0:investigationData.risk_score)!==undefined){scores.push({category:'Overall Risk Assessment',score:Math.round(investigationData.risk_score/10),// Convert from 0-100 to 0-10 scale\nweight:100});}return scores;};const riskScores=getRiskScores();// Use final_risk_score from API with fallback to risk_score (scale conversion)\nconst overallScore=(investigationData===null||investigationData===void 0?void 0:(_investigationData$ri=investigationData.risk_assessment)===null||_investigationData$ri===void 0?void 0:_investigationData$ri.final_risk_score)||(investigationData!==null&&investigationData!==void 0&&investigationData.risk_score?Math.round(investigationData.risk_score/10):0);// Generate conclusion based on overall score and available data\nconst getConclusion=()=>{var _investigationData$pu;const riskLevel=overallScore<=3?'LOW RISK':overallScore<=7?'MEDIUM RISK':'HIGH RISK';// Use available description from API\nconst companyDescription=investigationData===null||investigationData===void 0?void 0:(_investigationData$pu=investigationData.public_web_data)===null||_investigationData$pu===void 0?void 0:_investigationData$pu.company_description;const recommendations=investigationData===null||investigationData===void 0?void 0:investigationData.recommendations;let conclusion=`Based on comprehensive open-source investigation, ${companyName} presents a ${riskLevel} profile with a final risk score of ${overallScore}/10.`;if(companyDescription){conclusion+=` ${companyDescription.substring(0,300)}${companyDescription.length>300?'...':''}`;}else if(recommendations&&Array.isArray(recommendations)&&recommendations.length>0){conclusion+=` Key recommendation: ${recommendations[0]}`;}else{conclusion+=` Investigation completed successfully with detailed findings available above.`;}return conclusion;};const conclusion=loading?'Loading investigation results...':getConclusion();// Extract Evidence Locker from API sources\nconst getEvidenceLocker=()=>{if(!(investigationData!==null&&investigationData!==void 0&&investigationData.risk_assessment))return[];const evidence=[];const riskAssessment=investigationData.risk_assessment;const riskCategories=[{key:'geo_risk',name:'Geographical Risk'},{key:'industry_risk',name:'Industry Risk'},{key:'structure_risk',name:'Structure Risk'},{key:'adverse_media_risk',name:'Adverse Media Risk'},{key:'sanctions_risk',name:'Sanctions Risk'},{key:'pep_risk',name:'PEP Risk'}];riskCategories.forEach(category=>{const riskData=riskAssessment[category.key];if(riskData!==null&&riskData!==void 0&&riskData.Source){const categoryEvidence={category:riskData['Risk Category']||category.name,sources:[]};// Handle different source structures\nif(typeof riskData.Source==='object'){Object.keys(riskData.Source).forEach(sourceType=>{const sourceList=riskData.Source[sourceType];if(Array.isArray(sourceList)){sourceList.forEach(source=>{if(source.title&&source.link){categoryEvidence.sources.push({title:source.title,link:source.link,snippet:source.snippet||'No snippet available'});}});}});}if(categoryEvidence.sources.length>0){evidence.push(categoryEvidence);}}});return evidence;};const evidenceLocker=getEvidenceLocker();// Generate search keywords from company data\nconst getSearchKeywords=()=>{var _investigationData$pu2;if(!companyData&&!investigationData)return[];const keywords=[];if(companyData!==null&&companyData!==void 0&&companyData.legalName){keywords.push(companyData.legalName);// Add variations of company name\nconst nameParts=companyData.legalName.split(' ');if(nameParts.length>1){keywords.push(nameParts.slice(0,-1).join(' '));// Without legal form\n}}if(companyData!==null&&companyData!==void 0&&companyData.sbiDescription){keywords.push(companyData.sbiDescription);}if(investigationData!==null&&investigationData!==void 0&&(_investigationData$pu2=investigationData.public_web_data)!==null&&_investigationData$pu2!==void 0&&_investigationData$pu2.key_activities){keywords.push(investigationData.public_web_data.key_activities);}return keywords.slice(0,5);// Limit to 5 keywords\n};const searchKeywords=getSearchKeywords();return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsxs(\"main\",{className:\"report-main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"breadcrumb\",children:[/*#__PURE__*/_jsx(\"span\",{onClick:()=>navigate('/dashboard'),className:\"breadcrumb-link\",children:\"Dashboard\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"span\",{onClick:()=>navigate('/dashboard'),className:\"breadcrumb-link\",children:\"Recent Tickets\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"span\",{onClick:()=>navigate(`/ticket/${kvkNumber}`),className:\"breadcrumb-link\",children:companyName}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-separator\",children:\"\\u203A\"}),/*#__PURE__*/_jsx(\"span\",{className:\"breadcrumb-current\",children:\"Investigation Report\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"report-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"report-title-section\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"OPEN-SOURCE INVESTIGATION REPORT\"}),!loading&&/*#__PURE__*/_jsx(\"div\",{className:`api-status-indicator ${apiStatus}`,children:apiStatus==='online'?'LIVE DATA':'Offline Mode'})]}),/*#__PURE__*/_jsx(\"h2\",{children:loading?'Loading Company...':companyName}),/*#__PURE__*/_jsxs(\"div\",{className:\"report-meta\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"KVK: \",kvkNumber]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Generated: \",new Date().toLocaleDateString()]})]})]}),loading?/*#__PURE__*/_jsxs(\"div\",{className:\"loading-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Processing investigation data...\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"report-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Search Keywords Used\"}),/*#__PURE__*/_jsx(\"div\",{className:\"keywords-container\",children:searchKeywords.map((keyword,index)=>/*#__PURE__*/_jsx(\"span\",{className:\"keyword-tag\",children:keyword},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"report-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"FINDINGS\"}),/*#__PURE__*/_jsx(\"div\",{className:\"findings-grid\",children:findings.length>0?findings.map((finding,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"finding-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"finding-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:finding.category}),/*#__PURE__*/_jsxs(\"div\",{className:\"risk-score-display\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"risk-score\",children:[finding.score,\"/10\"]}),/*#__PURE__*/_jsx(\"span\",{className:`risk-badge ${finding.risk.toLowerCase()}`,children:finding.risk})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"finding-description\",children:finding.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"finding-explanation\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Risk Assessment\"}),/*#__PURE__*/_jsx(\"p\",{children:finding.explanation})]})]},index)):/*#__PURE__*/_jsxs(\"div\",{className:\"no-findings\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No findings available. Check browser console for API response details.\"}),investigationData&&/*#__PURE__*/_jsxs(\"details\",{style:{marginTop:'1rem',padding:'1rem',background:'#f5f5f5',borderRadius:'8px'},children:[/*#__PURE__*/_jsx(\"summary\",{children:\"Debug: Raw API Response\"}),/*#__PURE__*/_jsx(\"pre\",{style:{fontSize:'12px',overflow:'auto',maxHeight:'300px'},children:JSON.stringify(investigationData,null,2)})]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"report-section conclusion-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"CONCLUSION\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"conclusion-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"score-display\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"score-circle\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"score-number\",children:overallScore}),/*#__PURE__*/_jsx(\"span\",{className:\"score-max\",children:\"/10\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"score-label\",children:/*#__PURE__*/_jsx(\"span\",{className:`risk-level ${overallScore<=3?'low':overallScore<=7?'medium':'high'}`,children:overallScore<=3?'LOW RISK':overallScore<=7?'MEDIUM RISK':'HIGH RISK'})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"conclusion-text\",children:/*#__PURE__*/_jsx(\"p\",{children:conclusion})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"report-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Risk Score Breakdown\"}),/*#__PURE__*/_jsx(\"div\",{className:\"score-breakdown\",children:riskScores.map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"score-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"score-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"score-category\",children:item.category}),/*#__PURE__*/_jsxs(\"span\",{className:\"score-weight\",children:[\"Weight: \",item.weight,\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"score-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"score-fill\",style:{width:`${item.score/10*100}%`}})}),/*#__PURE__*/_jsxs(\"span\",{className:\"score-value\",children:[item.score,\"/10\"]})]},index))})]}),evidenceLocker.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"report-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Evidence Locker\"}),/*#__PURE__*/_jsx(\"div\",{className:\"evidence-categories\",children:evidenceLocker.map((category,categoryIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"evidence-category\",children:[/*#__PURE__*/_jsx(\"h4\",{children:category.category}),/*#__PURE__*/_jsx(\"div\",{className:\"evidence-sources\",children:category.sources.map((source,sourceIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"evidence-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"evidence-header\",children:/*#__PURE__*/_jsx(\"a\",{href:source.link,target:\"_blank\",rel:\"noopener noreferrer\",className:\"evidence-link\",children:source.title})}),/*#__PURE__*/_jsx(\"div\",{className:\"evidence-snippet\",children:source.snippet}),/*#__PURE__*/_jsx(\"div\",{className:\"evidence-url\",children:/*#__PURE__*/_jsx(\"small\",{children:source.link})})]},sourceIndex))})]},categoryIndex))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"report-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-btn primary\",onClick:()=>window.print(),children:\"Download Report\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-btn secondary\",onClick:()=>navigate(`/ticket/${kvkNumber}`),children:\"Back to Ticket\"}),/*#__PURE__*/_jsx(\"button\",{className:\"action-btn secondary\",onClick:()=>navigate('/dashboard'),children:\"Back to Dashboard\"})]})]})]})]})]});};export default InvestigationReport;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Header","Sidebar","apiService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","InvestigationReport","_investigationData$ri","kvkNumber","navigate","loading","setLoading","apiStatus","setApiStatus","investigationData","setInvestigationData","companyData","setCompanyData","loadInvestigationData","companyInfo","getCompanyDetails","health","healthCheck","status","investigationResult","processKYC","company_name","legalName","home_url","toLowerCase","replace","about_url","error","console","companyName","getFindings","log","getRiskLevel","score","riskCategories","key","name","description","findings","risk_assessment","riskAssessment","forEach","category","riskData","push","risk","explanation","Summary","baseScore","risk_score","Math","round","apiFindings","index","max","address","sbiDescription","legalForm","hasMediaFindings","some","f","includes","min","directors","length","getRiskScores","scores","weight","undefined","riskScores","overallScore","final_risk_score","getConclusion","_investigationData$pu","riskLevel","companyDescription","public_web_data","company_description","recommendations","conclusion","substring","Array","isArray","getEvidenceLocker","evidence","Source","categoryEvidence","sources","Object","keys","sourceType","sourceList","source","title","link","snippet","evidenceLocker","getSearchKeywords","_investigationData$pu2","keywords","nameParts","split","slice","join","key_activities","searchKeywords","className","children","onClick","Date","toLocaleDateString","map","keyword","finding","style","marginTop","padding","background","borderRadius","fontSize","overflow","maxHeight","JSON","stringify","item","width","categoryIndex","sourceIndex","href","target","rel","window","print"],"sources":["/home/jzorraquingimeno/dashboard-frontend/src/components/InvestigationReport.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport { apiService } from '../services/api';\nimport './InvestigationReport.css';\n\ninterface Finding {\n  category: string;\n  description: string;\n  risk: 'Low' | 'Medium' | 'High';\n  score: number; // 0-10 scale\n  explanation: string;\n}\n\ninterface RiskScore {\n  category: string;\n  score: number;\n  weight: number;\n}\n\nconst InvestigationReport: React.FC = () => {\n  const { kvkNumber } = useParams<{ kvkNumber: string }>();\n  const navigate = useNavigate();\n  \n  const [loading, setLoading] = useState(true);\n  const [apiStatus, setApiStatus] = useState<'online' | 'offline'>('offline');\n  const [investigationData, setInvestigationData] = useState<any>(null);\n  const [companyData, setCompanyData] = useState<any>(null);\n\n  // Load investigation data from API\n  useEffect(() => {\n    const loadInvestigationData = async () => {\n      if (!kvkNumber) return;\n\n      try {\n        setLoading(true);\n        \n        // First get company details to get the company name\n        const companyInfo = await apiService.getCompanyDetails(kvkNumber);\n        setCompanyData(companyInfo);\n        \n        // Check API health\n        const health = await apiService.healthCheck();\n        setApiStatus(health.status === 'healthy' ? 'online' : 'offline');\n\n        // Get investigation results from processKYC\n        const investigationResult = await apiService.processKYC({\n          company_name: companyInfo.legalName,\n          home_url: `https://example.com/${companyInfo.legalName.toLowerCase().replace(/\\s+/g, '-')}`,\n          about_url: `https://example.com/${companyInfo.legalName.toLowerCase().replace(/\\s+/g, '-')}/about`\n        });\n\n        setInvestigationData(investigationResult);\n      } catch (error) {\n        console.error('Failed to load investigation data:', error);\n        setApiStatus('offline');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadInvestigationData();\n  }, [kvkNumber]);\n\n  const companyName = companyData?.legalName || 'Unknown Company';\n\n  // Generate structured risk findings for the 6 specific risk categories\n  const getFindings = (): Finding[] => {\n    console.log('Investigation data structure:', investigationData);\n\n    // Helper function to convert risk score to risk level\n    const getRiskLevel = (score: number): 'Low' | 'Medium' | 'High' => {\n      if (score <= 3) return 'Low';\n      if (score <= 7) return 'Medium';\n      return 'High';\n    };\n\n    // Define the 6 risk categories with detailed information\n    const riskCategories = [\n      {\n        key: 'geo_risk',\n        name: 'Geographical Risk',\n        description: 'Assessment of risks associated with the company\\'s geographical location and operational jurisdictions'\n      },\n      {\n        key: 'industry_risk', \n        name: 'Industry Risk',\n        description: 'Evaluation of sector-specific risks and regulatory requirements for the company\\'s business activities'\n      },\n      {\n        key: 'structure_risk',\n        name: 'Structure Risk', \n        description: 'Analysis of corporate structure, ownership transparency, and organizational complexity'\n      },\n      {\n        key: 'adverse_media_risk',\n        name: 'Adverse Media Risk',\n        description: 'Investigation of negative media coverage, public controversies, and reputational concerns'\n      },\n      {\n        key: 'sanctions_risk',\n        name: 'Sanctions Risk',\n        description: 'Screening against international sanctions lists and restricted party databases'\n      },\n      {\n        key: 'pep_risk', \n        name: 'Politically Exposed Person (PEP) Risk',\n        description: 'Assessment of connections to politically exposed persons and government officials'\n      }\n    ];\n\n    const findings: Finding[] = [];\n\n    // Try detailed risk assessment structure first\n    if (investigationData?.risk_assessment) {\n      const riskAssessment = investigationData.risk_assessment;\n      console.log('Using detailed risk assessment data:', riskAssessment);\n\n      riskCategories.forEach(category => {\n        const riskData = riskAssessment[category.key];\n        if (riskData) {\n          const score = riskData['Risk Score'] || 0;\n          findings.push({\n            category: riskData['Risk Category'] || category.name,\n            description: category.description,\n            score: score,\n            risk: getRiskLevel(score),\n            explanation: riskData.Summary || riskData['Risk Description'] || `${category.name} assessment completed with score ${score}/10.`\n          });\n        }\n      });\n    }\n    \n    // Fallback: Generate structured findings from simple API response\n    else if (investigationData) {\n      console.log('Generating structured findings from simple API response');\n      \n      // Use overall risk score and available findings to generate structured assessment\n      const baseScore = investigationData.risk_score ? Math.round(investigationData.risk_score / 10) : 5;\n      const apiFindings = investigationData.findings || [];\n      \n      // Generate intelligent risk assessments for each category\n      riskCategories.forEach((category, index) => {\n        let score = baseScore;\n        let explanation = '';\n        \n        // Adjust scores and explanations based on category and available data\n        switch (category.key) {\n          case 'geo_risk':\n            score = Math.max(1, baseScore - 1); // Generally lower for established companies\n            explanation = `Geographical risk assessment based on company location and operational jurisdictions. `;\n            if (companyData?.address) {\n              explanation += `Company is registered in ${companyData.address}. `;\n            }\n            explanation += `Score reflects regional regulatory environment and political stability.`;\n            break;\n            \n          case 'industry_risk':\n            score = baseScore;\n            explanation = `Industry-specific risk evaluation for the company's business sector. `;\n            if (companyData?.sbiDescription) {\n              explanation += `Operating in ${companyData.sbiDescription} sector. `;\n            }\n            explanation += `Assessment considers regulatory requirements and sector-specific compliance obligations.`;\n            break;\n            \n          case 'structure_risk':\n            score = Math.max(2, baseScore - 1);\n            explanation = `Corporate structure analysis based on ownership transparency and organizational complexity. `;\n            if (companyData?.legalForm) {\n              explanation += `Legal form: ${companyData.legalForm}. `;\n            }\n            explanation += `Score reflects transparency of corporate structure and beneficial ownership.`;\n            break;\n            \n          case 'adverse_media_risk':\n            // Check if findings mention media or reputation\n            const hasMediaFindings = apiFindings.some((f: string) => \n              f.toLowerCase().includes('media') || f.toLowerCase().includes('news') || f.toLowerCase().includes('negative')\n            );\n            score = hasMediaFindings ? Math.min(8, baseScore + 2) : Math.max(1, baseScore - 2);\n            explanation = `Media screening and reputational risk assessment. `;\n            if (hasMediaFindings) {\n              explanation += `Investigation identified media coverage requiring attention. `;\n            } else {\n              explanation += `No significant adverse media coverage identified in current screening. `;\n            }\n            explanation += `Score based on public information and news analysis.`;\n            break;\n            \n          case 'sanctions_risk':\n            score = Math.max(1, baseScore - 2); // Generally low for legitimate companies\n            explanation = `Sanctions screening against international restricted party lists. `;\n            explanation += `Company and associated parties checked against OFAC, EU, UN sanctions databases. `;\n            explanation += `Low score indicates no matches found in current screening.`;\n            break;\n            \n          case 'pep_risk':\n            score = Math.max(1, baseScore - 1);\n            explanation = `Politically Exposed Person (PEP) risk assessment. `;\n            if (companyData?.directors && companyData.directors.length > 0) {\n              explanation += `Screening of ${companyData.directors.length} associated individual(s). `;\n            }\n            explanation += `Assessment covers direct and indirect connections to government officials and politically exposed persons.`;\n            break;\n        }\n        \n        findings.push({\n          category: category.name,\n          description: category.description,\n          score: Math.min(10, Math.max(0, score)), // Ensure 0-10 range\n          risk: getRiskLevel(score),\n          explanation: explanation\n        });\n      });\n    }\n\n    // Ensure we always have the 6 risk categories, even with minimal data\n    if (findings.length === 0) {\n      console.log('Creating default risk structure');\n      riskCategories.forEach(category => {\n        findings.push({\n          category: category.name,\n          description: category.description,\n          score: 3, // Default medium-low score\n          risk: 'Low',\n          explanation: `${category.name} assessment pending. Preliminary evaluation suggests low risk profile based on available information.`\n        });\n      });\n    }\n\n    console.log('Generated structured findings:', findings);\n    return findings;\n  };\n\n  const findings = getFindings();\n\n  // Generate risk scores from API data with fallback\n  const getRiskScores = (): RiskScore[] => {\n    const scores: RiskScore[] = [];\n\n    // Try detailed risk assessment structure first\n    if (investigationData?.risk_assessment) {\n      const riskAssessment = investigationData.risk_assessment;\n\n      const riskCategories = [\n        { key: 'geo_risk', name: 'Geographical Risk', weight: 20 },\n        { key: 'industry_risk', name: 'Industry Risk', weight: 15 },\n        { key: 'structure_risk', name: 'Structure Risk', weight: 25 },\n        { key: 'adverse_media_risk', name: 'Adverse Media Risk', weight: 15 },\n        { key: 'sanctions_risk', name: 'Sanctions Risk', weight: 15 },\n        { key: 'pep_risk', name: 'PEP Risk', weight: 10 }\n      ];\n\n      riskCategories.forEach(category => {\n        const riskData = riskAssessment[category.key];\n        if (riskData) {\n          scores.push({ \n            category: riskData['Risk Category'] || category.name, \n            score: riskData['Risk Score'] || 0, \n            weight: category.weight \n          });\n        }\n      });\n    }\n    \n    // Fallback: create a single overall risk score\n    else if (investigationData?.risk_score !== undefined) {\n      scores.push({\n        category: 'Overall Risk Assessment',\n        score: Math.round(investigationData.risk_score / 10), // Convert from 0-100 to 0-10 scale\n        weight: 100\n      });\n    }\n\n    return scores;\n  };\n\n  const riskScores = getRiskScores();\n\n  // Use final_risk_score from API with fallback to risk_score (scale conversion)\n  const overallScore = investigationData?.risk_assessment?.final_risk_score || \n                      (investigationData?.risk_score ? Math.round(investigationData.risk_score / 10) : 0);\n\n  // Generate conclusion based on overall score and available data\n  const getConclusion = (): string => {\n    const riskLevel = overallScore <= 3 ? 'LOW RISK' : overallScore <= 7 ? 'MEDIUM RISK' : 'HIGH RISK';\n    \n    // Use available description from API\n    const companyDescription = investigationData?.public_web_data?.company_description;\n    const recommendations = investigationData?.recommendations;\n    \n    let conclusion = `Based on comprehensive open-source investigation, ${companyName} presents a ${riskLevel} profile with a final risk score of ${overallScore}/10.`;\n    \n    if (companyDescription) {\n      conclusion += ` ${companyDescription.substring(0, 300)}${companyDescription.length > 300 ? '...' : ''}`;\n    } else if (recommendations && Array.isArray(recommendations) && recommendations.length > 0) {\n      conclusion += ` Key recommendation: ${recommendations[0]}`;\n    } else {\n      conclusion += ` Investigation completed successfully with detailed findings available above.`;\n    }\n    \n    return conclusion;\n  };\n\n  const conclusion = loading ? 'Loading investigation results...' : getConclusion();\n\n  // Extract Evidence Locker from API sources\n  const getEvidenceLocker = () => {\n    if (!investigationData?.risk_assessment) return [];\n    \n    const evidence: Array<{category: string, sources: Array<{title: string, link: string, snippet: string}>}> = [];\n    const riskAssessment = investigationData.risk_assessment;\n\n    const riskCategories = [\n      { key: 'geo_risk', name: 'Geographical Risk' },\n      { key: 'industry_risk', name: 'Industry Risk' },\n      { key: 'structure_risk', name: 'Structure Risk' },\n      { key: 'adverse_media_risk', name: 'Adverse Media Risk' },\n      { key: 'sanctions_risk', name: 'Sanctions Risk' },\n      { key: 'pep_risk', name: 'PEP Risk' }\n    ];\n\n    riskCategories.forEach(category => {\n      const riskData = riskAssessment[category.key];\n      if (riskData?.Source) {\n        const categoryEvidence = {\n          category: riskData['Risk Category'] || category.name,\n          sources: [] as Array<{title: string, link: string, snippet: string}>\n        };\n\n        // Handle different source structures\n        if (typeof riskData.Source === 'object') {\n          Object.keys(riskData.Source).forEach(sourceType => {\n            const sourceList = riskData.Source[sourceType];\n            if (Array.isArray(sourceList)) {\n              sourceList.forEach((source: any) => {\n                if (source.title && source.link) {\n                  categoryEvidence.sources.push({\n                    title: source.title,\n                    link: source.link,\n                    snippet: source.snippet || 'No snippet available'\n                  });\n                }\n              });\n            }\n          });\n        }\n\n        if (categoryEvidence.sources.length > 0) {\n          evidence.push(categoryEvidence);\n        }\n      }\n    });\n\n    return evidence;\n  };\n\n  const evidenceLocker = getEvidenceLocker();\n\n  // Generate search keywords from company data\n  const getSearchKeywords = (): string[] => {\n    if (!companyData && !investigationData) return [];\n    \n    const keywords: string[] = [];\n    \n    if (companyData?.legalName) {\n      keywords.push(companyData.legalName);\n      // Add variations of company name\n      const nameParts = companyData.legalName.split(' ');\n      if (nameParts.length > 1) {\n        keywords.push(nameParts.slice(0, -1).join(' ')); // Without legal form\n      }\n    }\n    \n    if (companyData?.sbiDescription) {\n      keywords.push(companyData.sbiDescription);\n    }\n    \n    if (investigationData?.public_web_data?.key_activities) {\n      keywords.push(investigationData.public_web_data.key_activities);\n    }\n    \n    return keywords.slice(0, 5); // Limit to 5 keywords\n  };\n\n  const searchKeywords = getSearchKeywords();\n\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"app-container\">\n        <Sidebar />\n        <main className=\"report-main\">\n          {/* Breadcrumb Navigation */}\n          <div className=\"breadcrumb\">\n            <span onClick={() => navigate('/dashboard')} className=\"breadcrumb-link\">\n              Dashboard\n            </span>\n            <span className=\"breadcrumb-separator\">›</span>\n            <span onClick={() => navigate('/dashboard')} className=\"breadcrumb-link\">\n              Recent Tickets\n            </span>\n            <span className=\"breadcrumb-separator\">›</span>\n            <span onClick={() => navigate(`/ticket/${kvkNumber}`)} className=\"breadcrumb-link\">\n              {companyName}\n            </span>\n            <span className=\"breadcrumb-separator\">›</span>\n            <span className=\"breadcrumb-current\">\n              Investigation Report\n            </span>\n          </div>\n\n          {/* Report Header */}\n          <div className=\"report-header\">\n            <div className=\"report-title-section\">\n              <h1>OPEN-SOURCE INVESTIGATION REPORT</h1>\n              {!loading && (\n                <div className={`api-status-indicator ${apiStatus}`}>\n                  {apiStatus === 'online' ? 'LIVE DATA' : 'Offline Mode'}\n                </div>\n              )}\n            </div>\n            <h2>{loading ? 'Loading Company...' : companyName}</h2>\n            <div className=\"report-meta\">\n              <span>KVK: {kvkNumber}</span>\n              <span>Generated: {new Date().toLocaleDateString()}</span>\n            </div>\n          </div>\n\n          {loading ? (\n            <div className=\"loading-content\">\n              <div className=\"loading-spinner\"></div>\n              <p>Processing investigation data...</p>\n            </div>\n          ) : (\n            <>\n              {/* Keywords Section */}\n              <div className=\"report-section\">\n                <h3>Search Keywords Used</h3>\n                <div className=\"keywords-container\">\n                  {searchKeywords.map((keyword, index) => (\n                    <span key={index} className=\"keyword-tag\">\n                      {keyword}\n                    </span>\n                  ))}\n                </div>\n              </div>\n\n          {/* Findings Section */}\n          <div className=\"report-section\">\n            <h3>FINDINGS</h3>\n            <div className=\"findings-grid\">\n              {findings.length > 0 ? (\n                findings.map((finding, index) => (\n                  <div key={index} className=\"finding-item\">\n                    <div className=\"finding-header\">\n                      <h4>{finding.category}</h4>\n                      <div className=\"risk-score-display\">\n                        <span className=\"risk-score\">{finding.score}/10</span>\n                        <span className={`risk-badge ${finding.risk.toLowerCase()}`}>\n                          {finding.risk}\n                        </span>\n                      </div>\n                    </div>\n                    <p className=\"finding-description\">{finding.description}</p>\n                    <div className=\"finding-explanation\">\n                      <h5>Risk Assessment</h5>\n                      <p>{finding.explanation}</p>\n                    </div>\n                  </div>\n                ))\n              ) : (\n                <div className=\"no-findings\">\n                  <p>No findings available. Check browser console for API response details.</p>\n                  {investigationData && (\n                    <details style={{ marginTop: '1rem', padding: '1rem', background: '#f5f5f5', borderRadius: '8px' }}>\n                      <summary>Debug: Raw API Response</summary>\n                      <pre style={{ fontSize: '12px', overflow: 'auto', maxHeight: '300px' }}>\n                        {JSON.stringify(investigationData, null, 2)}\n                      </pre>\n                    </details>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Conclusion Section */}\n          <div className=\"report-section conclusion-section\">\n            <h3>CONCLUSION</h3>\n            <div className=\"conclusion-content\">\n              <div className=\"score-display\">\n                <div className=\"score-circle\">\n                  <span className=\"score-number\">{overallScore}</span>\n                  <span className=\"score-max\">/10</span>\n                </div>\n                <div className=\"score-label\">\n                  <span className={`risk-level ${overallScore <= 3 ? 'low' : overallScore <= 7 ? 'medium' : 'high'}`}>\n                    {overallScore <= 3 ? 'LOW RISK' : overallScore <= 7 ? 'MEDIUM RISK' : 'HIGH RISK'}\n                  </span>\n                </div>\n              </div>\n              <div className=\"conclusion-text\">\n                <p>{conclusion}</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Risk Score Breakdown */}\n          <div className=\"report-section\">\n            <h3>Risk Score Breakdown</h3>\n            <div className=\"score-breakdown\">\n              {riskScores.map((item, index) => (\n                <div key={index} className=\"score-item\">\n                  <div className=\"score-info\">\n                    <span className=\"score-category\">{item.category}</span>\n                    <span className=\"score-weight\">Weight: {item.weight}%</span>\n                  </div>\n                  <div className=\"score-bar\">\n                    <div \n                      className=\"score-fill\"\n                      style={{ width: `${(item.score / 10) * 100}%` }}\n                    ></div>\n                  </div>\n                  <span className=\"score-value\">{item.score}/10</span>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Evidence Locker */}\n          {evidenceLocker.length > 0 && (\n            <div className=\"report-section\">\n              <h3>Evidence Locker</h3>\n              <div className=\"evidence-categories\">\n                {evidenceLocker.map((category, categoryIndex) => (\n                  <div key={categoryIndex} className=\"evidence-category\">\n                    <h4>{category.category}</h4>\n                    <div className=\"evidence-sources\">\n                      {category.sources.map((source, sourceIndex) => (\n                        <div key={sourceIndex} className=\"evidence-item\">\n                          <div className=\"evidence-header\">\n                            <a \n                              href={source.link} \n                              target=\"_blank\" \n                              rel=\"noopener noreferrer\"\n                              className=\"evidence-link\"\n                            >\n                              {source.title}\n                            </a>\n                          </div>\n                          <div className=\"evidence-snippet\">\n                            {source.snippet}\n                          </div>\n                          <div className=\"evidence-url\">\n                            <small>{source.link}</small>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n              {/* Action Buttons */}\n              <div className=\"report-actions\">\n                <button \n                  className=\"action-btn primary\"\n                  onClick={() => window.print()}\n                >\n                  Download Report\n                </button>\n                <button \n                  className=\"action-btn secondary\"\n                  onClick={() => navigate(`/ticket/${kvkNumber}`)}\n                >\n                  Back to Ticket\n                </button>\n                <button \n                  className=\"action-btn secondary\"\n                  onClick={() => navigate('/dashboard')}\n                >\n                  Back to Dashboard\n                </button>\n              </div>\n            </>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default InvestigationReport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}